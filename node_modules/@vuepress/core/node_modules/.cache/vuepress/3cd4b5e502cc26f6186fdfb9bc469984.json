{"remainingRequest":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/ProgressBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/ProgressBarChart.vue","mtime":1598335779734},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ProgressBarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"ProgressBarChart.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div class=\"echarts-container\">\n    <chart\n      ref=\"bar\"\n      :options=\"polar\"\n      auto-resize\n      v-if=\"options.name && options.name.length\"\n      @click=\"handleBarClick\"\n    ></chart>\n    <no-data :title=\"title\" v-else></no-data>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ProgressBarChart',\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {\n      polar: {},\n      title: '',\n      textColor: '#333',\n      baseColor: [\n        '#2e8a00',\n        '#007fff',\n        '#fe90bf',\n        '#11feef',\n        '#ff3890',\n        '#ff644b',\n        '#29c342',\n        '#ff9600',\n        '#a34be0',\n        '#11b0ff'\n      ],\n      baseColors: [\n        ['#4cc3ff', '#00aaff'],\n        ['#d075eb', '#bc15fa'],\n        ['#f8cf5c', '#fdba00'],\n        ['#80ff94', '#1bb934'],\n        ['#b8acfe', '#755ffc'],\n        ['#ff9897', '#f650a0'],\n        ['#ffa62e', '#ea5c0f'],\n        ['#49fed4', '#04c792'],\n        ['#7789f9', '#2a4ff3'],\n        ['#fc557c', '#fe2457']\n      ]\n    }\n  },\n  watch: {\n    options: {\n      handler: 'renderChart',\n      deep: true\n    }\n  },\n  methods: {\n    renderChart() {\n      let that = this\n      this.title = this.options.text || this.options.toolboxName || ''\n      let isZoom = this.options.name && this.options.name.length > 10\n      this.polar = {\n        color: this.options.color || this.baseColor,\n        // 标题\n        title: {\n          text: this.options.text || '',\n          textStyle: {\n            color: this.options.textColor || this.textColor,\n            fontSize: this.options.textFontSize || 18\n          },\n          subtext:\n            this.options.subtext ||\n            (isZoom ? '当前数据较多，请滚动鼠标或缩放屏幕查看完整数据' : ''),\n          subtextStyle: {\n            color: this.options.subtextColor || '#f49800',\n            fontSize: this.options.subtextFontSize || 12\n          },\n          top: this.$utils.checkParam(this.options.titleTop, 'auto'),\n          left: this.$utils.checkParam(this.options.titleLeft, 'center'),\n          backgroundColor: this.options.backgroundColor || 'transparent'\n        },\n        // 图例\n        legend: {\n          type: 'scroll', // 只有容器放不下图例, scroll 才会生效\n          show:\n            this.options.showLegend === false\n              ? false\n              : this.options.showLegend || (this.options.legend && this.options.legend.length > 1),\n          data: this.options.legend || [this.options.text],\n          right: !this.options.hideTooltip ? 60 : 0,\n          top: this.options.legendTop || 25,\n          textStyle: {\n            color: this.options.legendColor || this.textColor,\n            fontSize: this.options.legendFontSize || 12\n          }\n        },\n        // 提示框\n        tooltip: {\n          show: !this.options.hideTooltip,\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: this.options.tooltipType || 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n          }\n        },\n        // 工具栏\n        toolbox: {\n          show: !this.options.hideToolBox,\n          feature: {\n            saveAsImage: {\n              show: !this.options.hideImage,\n              name: this.options.toolboxName || this.options.text,\n              backgroundColor: 'rgba(0, 35, 55, 0.4)'\n            }\n          },\n          right: this.options.toolboxRight || 25,\n          top: this.options.toolboxTop || 25,\n          iconStyle: {\n            normal: {\n              borderColor: this.textColor\n            }\n          }\n        },\n        // 直角坐标系内绘图网格\n        grid: {\n          left: this.$utils.checkParam(this.options.gridLeft, '3%'),\n          right: this.$utils.checkParam(this.options.gridRight, '3%'),\n          bottom: this.$utils.checkParam(this.options.gridBottom, '3%'),\n          top: this.$utils.checkParam(this.options.gridTop, '3%'),\n          containLabel: true\n        },\n        xAxis: {\n          show: false\n        },\n        yAxis: [\n          {\n            show: !this.options.hideyAxis,\n            inverse: true,\n            data: this.options.name,\n            // 坐标轴轴线\n            axisLine: {\n              show: this.options.hideyAxisLine === undefined ? true : !this.options.hideyAxisLine,\n              lineStyle: {\n                color: this.options.yAxisColor || this.textColor\n              }\n            },\n            // 坐标轴刻度\n            axisTick: {\n              show: this.options.hideyAxisTick === undefined ? true : !this.options.hideyAxisTick,\n              alignWithLabel: true\n            },\n            // 坐标轴刻度标签\n            axisLabel: {\n              fontSize: this.options.yAxisFontSize || 12,\n              color: this.options.yAxisColor || this.textColor,\n              // 坐标轴刻度标签的显示间隔，在类目轴中有效。可以设置成 0 强制显示所有标签。\n              interval: 0,\n              formatter(value) {\n                let ret = '' // 拼接加\\n返回的类目项\n                let maxLength = that.options.yAxisMaxLength || 8 // 每项显示文字个数\n                let valLength = value.length // X轴类目项的文字个数\n                let rowN = Math.ceil(valLength / maxLength) // 类目项需要换行的行数\n                if (rowN > 1) {\n                  // 如果类目项的文字大于8,\n                  for (let i = 0; i < rowN; i++) {\n                    let temp = '' // 每次截取的字符串\n                    let start = i * maxLength // 开始截取的位置\n                    let end = start + maxLength // 结束截取的位置\n                    // 这里加一个是否是最后一行的判断\n                    temp = value.substring(start, end) + (i === rowN - 1 ? '' : '\\n')\n                    ret += temp // 拼接最终的字符串\n                  }\n                  return ret\n                } else {\n                  return value\n                }\n              }\n            }\n          },\n          {\n            show: !this.options.hideyAxisLabel,\n            inverse: true,\n            data: this.options.yAxisLabel,\n            // 坐标轴轴线\n            axisLine: {\n              show: this.options.hideyAxisLine === undefined ? true : !this.options.hideyAxisLine,\n              lineStyle: {\n                color: this.options.yAxisColor || this.textColor\n              }\n            },\n            // 坐标轴刻度\n            axisTick: {\n              show: this.options.hideyAxisTick === undefined ? true : !this.options.hideyAxisTick,\n              alignWithLabel: true\n            },\n            // 坐标轴刻度标签\n            axisLabel: {\n              fontSize: this.options.yAxisFontSize || 12,\n              color: this.options.yAxisColor || this.textColor\n            }\n          }\n        ],\n        series: [\n          {\n            name: '内条',\n            type: 'bar',\n            barGap: '-100%',\n            data: this.options.inside,\n            barWidth: this.$utils.checkParam(this.options.insideWidth, 25),\n            itemStyle: {\n              normal: {\n                barBorderRadius: this.$utils.checkParam(this.options.insideRadius, 25),\n                // 添加一个是否渐变\n                color(params) {\n                  if (that.options.isGradient) {\n                    let color = that.options.color || that.baseColors\n                    let num = color.length\n                    return {\n                      colorStops: [\n                        {\n                          offset: 0,\n                          color: color[params.dataIndex % num][0] // 0% 处的颜色\n                        },\n                        {\n                          offset: 1,\n                          color: color[params.dataIndex % num][1] // 100% 处的颜色\n                        }\n                      ],\n                      globalCoord: false // 缺省为 false\n                    }\n                  } else {\n                    let color = that.options.color || that.baseColor\n                    let num = color.length\n                    return color[params.dataIndex % num]\n                  }\n                }\n              }\n            },\n            label: {\n              normal: {\n                show: true,\n                position: this.options.insidePosition || 'inside',\n                formatter: this.options.insideFormat || '{c}'\n              }\n            },\n            z: 2\n          },\n          {\n            name: '外条',\n            type: 'bar',\n            barGap: '-100%',\n            data: this.options.outside,\n            barWidth: this.$utils.checkParam(this.options.outsideWidth, 25),\n            itemStyle: {\n              normal: {\n                barBorderRadius: this.$utils.checkParam(this.options.outsideRadius, 25),\n                color: this.options.outsideBarBack || 'rgba(102, 102, 102, 0.5)'\n              }\n            },\n            z: 1\n          }\n        ]\n      }\n      // 开启缩放\n      if (isZoom) {\n        this.polar.dataZoom = [\n          {\n            type: 'inside',\n            show: true,\n            yAxisIndex: [0],\n            start: 1,\n            end: 35\n          }\n        ]\n      }\n    },\n    handleBarClick(event) {\n      this.$emit('item-click', event, this.options.xAxis)\n    }\n  },\n  mounted() {\n    this.renderChart()\n  }\n}\n</script>\n\n<style></style>\n"]}]}