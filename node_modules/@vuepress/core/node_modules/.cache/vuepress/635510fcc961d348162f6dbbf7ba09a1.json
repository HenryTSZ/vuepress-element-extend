{"remainingRequest":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/EditableElements.vue?vue&type=style&index=0&id=3734af4a&lang=less&scoped=true&","dependencies":[{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/EditableElements.vue","mtime":1598686842823},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWRpdGFibGUtZWxlbWVudHMgewogIC5lbC1zZWxlY3QgewogICAgd2lkdGg6IDEwMCU7CiAgfQp9Cg=="},{"version":3,"sources":["EditableElements.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA","file":"EditableElements.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<!--\n * @Author: HenryTSZ\n * @Date: 2020-05-07 13:30:49\n * @Description:\n * @LastEditors: HenryTSZ\n * @LastEditTime: 2020-08-29 15:36:53\n-->\n<template>\n  <component\n    :is=\"item.component\"\n    v-model=\"model[item.prop]\"\n    :key=\"item.prop\"\n    v-bind=\"item\"\n    v-focus=\"item.focus\"\n    :placeholder=\"item.placeholder || `${handlePlaceholder(item.type)}${item.label}`\"\n    v-on=\"{ ...$listeners, ...item.events }\"\n  >\n    <text-ellipsis v-if=\"item.type === 'info'\" :content=\"model[item.prop]\"></text-ellipsis>\n    <el-option\n      v-for=\"option in item.select\"\n      :key=\"option[listProps.value]\"\n      :value=\"option[listProps.value]\"\n      :label=\"option[listProps.label]\"\n      :disabled=\"option.disabled\"\n    ></el-option>\n    <!-- radio / checkbox 等 -->\n    <template v-if=\"list.includes(item.type)\">\n      <component\n        :is=\"`el-${item.type}`\"\n        v-for=\"ele in item[item.type]\"\n        :key=\"ele[listProps.value]\"\n        :label=\"ele[listProps.value]\"\n        :disabled=\"ele.disabled\"\n      >\n        {{ ele[listProps.label] }}\n      </component>\n    </template>\n    <slot v-for=\"(value, key) in item.slots\" :name=\"key\" :slot=\"key\">{{ value }}</slot>\n  </component>\n</template>\n\n<script>\nimport { handlePlaceholder } from 'utils'\n\nexport default {\n  name: 'EditableElements',\n  inheritAttrs: false,\n  props: {\n    item: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    model: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {\n      list: ['radio', 'checkbox']\n    }\n  },\n  computed: {\n    listProps() {\n      const props = this.item[`${this.item.type}Props`]\n      if (!props) return { label: 'label', value: 'value' }\n      const { label = 'label', value = 'value', ...rest } = props\n      console.log({\n        label,\n        value,\n        ...rest\n      })\n      return {\n        label,\n        value,\n        ...rest\n      }\n    }\n  },\n  methods: {\n    handlePlaceholder\n  },\n  directives: {\n    focus: {\n      // [vue v-focus v-show控制input的显示聚焦，第二次不生效问题_JavaScript_宣城-CSDN博客](https://blog.csdn.net/qq_37361812/article/details/93782340)\n      // [页面一刷新让文本框自动获取焦点-- 和自定义v-focus指令 - 明月人倚楼 - 博客园](https://www.cnblogs.com/IwishIcould/p/12006378.html)\n      update(el, { value, oldValue }) {\n        if (value && value !== oldValue) {\n          // 重点注意这里 当前元素是 div  所以要查到子元素中的 input\n          const dom = el.querySelector('input') || el.querySelector('textarea')\n          dom && dom.focus()\n        }\n      },\n      inserted(el, { value }) {\n        if (value) {\n          // 重点注意这里 当前元素是 div  所以要查到子元素中的 input\n          const dom = el.querySelector('input') || el.querySelector('textarea')\n          dom && dom.focus()\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.editable-elements {\n  .el-select {\n    width: 100%;\n  }\n}\n</style>\n"]}]}