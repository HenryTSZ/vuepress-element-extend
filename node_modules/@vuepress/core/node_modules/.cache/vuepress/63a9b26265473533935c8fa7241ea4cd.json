{"remainingRequest":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/UEditor.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/UEditor.vue","mtime":1598337811791},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnUtZWRpdG9yIHsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIC5lZHVpLWVkaXRvciB7CiAgICBtaW4taGVpZ2h0OiAzMDBweDsKICB9CgogIC5lZHVpLWVkaXRvci10b29sYmFyYm94b3V0ZXIgewogICAgbGluZS1oZWlnaHQ6IDEuNDI4NTcxNDM7CiAgfQoKICAvLyDljrvmjonmnKzlnLDkv53lrZjmiJDlip/mj5DnpLoKICAuZWR1aS1kZWZhdWx0IC5lZHVpLWVkaXRvci1tZXNzYWdlaG9sZGVyIHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgfQp9Cg=="},{"version":3,"sources":["UEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6LA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"UEditor.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div class=\"u-editor\" :style=\"{ height }\">\n    <!-- 利用 iframe 可以使 reset.css 不起作用；动态 src 是为了重新加载 html 页面，避免缓存 -->\n    <iframe\n      :id=\"iframeId\"\n      v-if=\"disabled\"\n      :src=\"src\"\n      width=\"100%\"\n      height=\"100%\"\n      frameborder=\"0\"\n    ></iframe>\n    <script v-else :id=\"ueId\" type=\"text/plain\" name=\"content\" />\n  </div>\n</template>\n\n<script>\nimport { checkProps } from 'utils'\n\nconst EDITOR_SCRIPT_ID = 'editorScriptTag'\nconst EDITOR_CONFIG_ID = 'configScriptTag'\n\nexport default {\n  name: 'UEditor',\n  data() {\n    return {\n      ueId: `editor_${Math.random()\n        .toString()\n        .substr(2)}`,\n      iframeId: `iframe_${Math.random()\n        .toString()\n        .substr(2)}`,\n      instance: null,\n      innerModify: false,\n      editorReady: false,\n      isFocus: false,\n      src: '',\n      baseConfig: {\n        UEDITOR_HOME_URL: '/ue/',\n        serverUrl: '/ue/jsp/config.json',\n        initialFrameWidth: '100%'\n      }\n    }\n  },\n  props: {\n    path: checkProps.strDef('/ue/'),\n    config: checkProps.objDef({}),\n    value: checkProps.strDef(''),\n    disabled: checkProps.boolDef(false),\n    height: checkProps.strDef('auto')\n  },\n  watch: {\n    value(val) {\n      if (this.disabled) {\n        // 将 editor 中的内容保存到 sessionStorage\n        sessionStorage.setItem(this.iframeId, val)\n        this.src = `/ueditor.html?id=${this.iframeId}&_t=${Date.now()}`\n        this.resizeHeight()\n        return\n      }\n      if (this.innerModify) {\n        this.innerModify = false\n        return this.innerModify\n      }\n      this.setContent(val)\n    }\n  },\n  methods: {\n    setEnabled() {\n      this.instance && this.instance.setEnabled()\n    },\n    setHide() {\n      this.instance && this.instance.setHide()\n    },\n    clearDoc() {\n      this.instance && this.instance.execCommand('cleardoc')\n    },\n    getContent() {\n      return this.instance && this.instance.getContent()\n    },\n    setContent(html) {\n      this.editorReady\n        ? this.instance.setContent(html)\n        : setTimeout(() => this.setContent(html), 100)\n    },\n    initEditor() {\n      if (!window.UE || this.instance) return\n      let inter = setInterval(() => {\n        if (window.UE.getEditor) {\n          clearInterval(inter)\n          this.instance = window.UE.getEditor(this.ueId, { ...this.baseConfig, ...this.config })\n          // http://fex.baidu.com/ueditor/#qa-ready\n          // this.instance.addListener('ready', this.doReady)\n          this.instance.ready(this.doReady)\n          this.instance.addListener('contentChange', this.contentChange)\n          this.instance.addListener('blur', this.blur)\n          this.instance.addListener('focus', this.focus)\n        }\n      }, 30)\n    },\n    blur() {\n      this.contentChange()\n      this.isFocus = false\n    },\n    focus() {\n      this.isFocus = true\n    },\n    doReady() {\n      this.$emit('ready', this.instance)\n      this.editorReady = true\n      // 设置编辑器内容区高度，但会出现滚动条\n      // this.instance.setHeight(this.height === 'auto' ? 100 : this.height)\n      this.instance.setContent(this.value)\n    },\n    contentChange() {\n      const val = this.getContent()\n      if (this.isFocus) {\n        this.innerModify = true\n        this.$emit('input', val)\n        setTimeout(() => {\n          this.innerModify = false\n        })\n      }\n    },\n    async insertScript() {\n      await Promise.all([\n        this.insert(EDITOR_SCRIPT_ID, 'ueditor.all.min.js'),\n        this.insert(EDITOR_CONFIG_ID, 'ueditor.config.js')\n      ]).then(() => {\n        this.initEditor()\n      })\n    },\n    async insert(id, fileName) {\n      let s = document.getElementById(id)\n      if (s) {\n        return Promise.resolve()\n      }\n      s = document.createElement('script')\n      s.src = this.path + fileName\n      s.id = id\n      const head = document.head || document.getElementsByTagName('head')[0]\n      head.appendChild(s)\n      return new Promise(resolve => s.addEventListener('load', () => resolve()))\n    },\n    resizeHeight() {\n      if (this.height === 'auto') {\n        this.$nextTick(() => {\n          let iframe = document.getElementById(this.iframeId)\n          iframe.setAttribute('height', '0px')\n          // iframe.style.visibility = 'hidden'\n          iframe.onload = function() {\n            this.setAttribute(\n              'height',\n              this.contentWindow.document.documentElement.scrollHeight + 'px'\n            )\n            // this.style.visibility = 'visible'\n          }\n        })\n      }\n    }\n  },\n  created() {\n    if (this.disabled) {\n      sessionStorage.setItem(this.iframeId, this.value)\n      this.src = `/ueditor.html?id=${this.iframeId}&_t=${Date.now()}`\n      // 如果 iframe 父元素未设置高度，让 iframe 撑开\n      this.resizeHeight()\n    } else {\n      if (window.UE) {\n        this.initEditor()\n      } else {\n        this.insertScript()\n      }\n    }\n  },\n  beforeDestroy() {\n    sessionStorage.removeItem(this.iframeId)\n    if (this.instance) {\n      this.instance.removeListener('ready', this.doReady)\n      this.instance.removeListener('contentChange', this.contentChange)\n      this.instance.removeListener('blur', this.blur)\n      this.instance.removeListener('focus', this.focus)\n      this.instance.destroy()\n      this.instance = null\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.u-editor {\n  background: #fff;\n  .edui-editor {\n    min-height: 300px;\n  }\n\n  .edui-editor-toolbarboxouter {\n    line-height: 1.42857143;\n  }\n\n  // 去掉本地保存成功提示\n  .edui-default .edui-editor-messageholder {\n    display: none;\n  }\n}\n</style>\n"]}]}