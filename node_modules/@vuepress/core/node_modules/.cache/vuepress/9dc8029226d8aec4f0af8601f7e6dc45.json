{"remainingRequest":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/Tree1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/Tree1.vue","mtime":1598337875184},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHJlZTEnLAogIHByb3BzOiB7CiAgICBub2RlS2V5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2lkJwogICAgfSwKICAgIHNob3dDaGVja0FsbDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHNob3dDaGVja2JveDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGxldmVsOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlZjogJ2VsVHJlZScsCiAgICAgIGlzSW5kZXRlcm1pbmF0ZTogZmFsc2UsCiAgICAgIGNoZWNrQWxsOiBmYWxzZQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGxldmVsOiB7CiAgICAgIGhhbmRsZXI6ICdleHBhbmRUb0xldmVsJywKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKioKICAgICAqIEBtZXRob2Qg5bGV5byA6Iez5oyH5a6a5bGC57qnCiAgICAgKiBAcGFyYW0ge051bWJlcn0gbGV2ZWwg6KaB5bGV5byA6Iez5Yeg57qn77yfMCwgMSwgMiwgMy4uLgogICAgICoqLwogICAgZXhwYW5kVG9MZXZlbChsZXZlbCkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgY29uc3QgZWxUcmVlU3RvcmUgPSB0aGlzLiRyZWZzW3RoaXMucmVmXS5zdG9yZQogICAgICAgIGNvbnN0IGFsbE5vZGVzID0gZWxUcmVlU3RvcmUuX2dldEFsbE5vZGVzKCkuc29ydCgoYSwgYikgPT4gYi5sZXZlbCAtIGEubGV2ZWwpCiAgICAgICAgaWYgKGxldmVsID09PSAwKSB7CiAgICAgICAgICAvLyDlsZXlvIDlhajpg6gKICAgICAgICAgIGFsbE5vZGVzLmZvckVhY2gobm9kZSA9PiB7CiAgICAgICAgICAgIG5vZGUuaXNMZWFmICYmIG5vZGUuZXhwYW5kKG51bGwsIHRydWUpCiAgICAgICAgICB9KQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhbGxOb2Rlcy5mb3JFYWNoKG5vZGUgPT4gewogICAgICAgICAgICBpZiAobm9kZS5sZXZlbCA+PSBsZXZlbCkgewogICAgICAgICAgICAgIG5vZGUuZXhwYW5kZWQgPSBmYWxzZQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG5vZGUuZXhwYW5kZWQgPSB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIC8vIOWkhOeQhuWFqOmAiQogICAgaGFuZGxlQ2hlY2tBbGxDaGFuZ2UoKSB7CiAgICAgIHRoaXMuaXNJbmRldGVybWluYXRlID0gZmFsc2UKICAgICAgbGV0IGNoZWNrZWRLZXlzID0gW10KICAgICAgaWYgKHRoaXMuY2hlY2tBbGwpIHsKICAgICAgICBjb25zdCBlbFRyZWVTdG9yZSA9IHRoaXMuJHJlZnNbdGhpcy5yZWZdLnN0b3JlCiAgICAgICAgY29uc3QgY2hlY2tlZE5vZGVzID0gZWxUcmVlU3RvcmUuX2dldEFsbE5vZGVzKCkuZmlsdGVyKCh7IHZpc2libGUgfSkgPT4gdmlzaWJsZSkKICAgICAgICBjaGVja2VkS2V5cyA9IGNoZWNrZWROb2Rlcy5tYXAoKHsga2V5IH0pID0+IGtleSkKICAgICAgICB0aGlzLiRlbWl0KAogICAgICAgICAgJ2NoZWNrJywKICAgICAgICAgIHsgW3RoaXMuJHJlZnNbdGhpcy5yZWZdLnByb3BzLmxhYmVsIHx8ICdsYWJlbCddOiAn5YWo6YCJJyB9LAogICAgICAgICAgewogICAgICAgICAgICBjaGVja2VkTm9kZXMsCiAgICAgICAgICAgIGNoZWNrZWRLZXlzLAogICAgICAgICAgICBoYWxmQ2hlY2tlZE5vZGVzOiBbXSwKICAgICAgICAgICAgaGFsZkNoZWNrZWRLZXlzOiBbXQogICAgICAgICAgfQogICAgICAgICkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRlbWl0KAogICAgICAgICAgJ2NoZWNrJywKICAgICAgICAgIHsgW3RoaXMuJHJlZnNbdGhpcy5yZWZdLnByb3BzLmxhYmVsIHx8ICdsYWJlbCddOiAn5YWo6YCJJyB9LAogICAgICAgICAgewogICAgICAgICAgICBjaGVja2VkTm9kZXM6IFtdLAogICAgICAgICAgICBjaGVja2VkS2V5czogW10sCiAgICAgICAgICAgIGhhbGZDaGVja2VkTm9kZXM6IFtdLAogICAgICAgICAgICBoYWxmQ2hlY2tlZEtleXM6IFtdCiAgICAgICAgICB9CiAgICAgICAgKQogICAgICB9CiAgICAgIHRoaXMuJHJlZnNbdGhpcy5yZWZdLnNldENoZWNrZWRLZXlzKGNoZWNrZWRLZXlzKQogICAgfSwKICAgIC8vIGVsLXRyZWUg5aSN6YCJ5qGG6KKr54K55Ye7CiAgICBoYW5kbGVDaGVjayhkYXRhLCBjaGVja2VkKSB7CiAgICAgIGlmICghdGhpcy5zaG93Q2hlY2tBbGwgfHwgIXRoaXMuc2hvd0NoZWNrYm94KSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgY29uc3QgeyBjaGVja2VkS2V5cyB9ID0gY2hlY2tlZAogICAgICBjb25zdCBlbFRyZWVTdG9yZSA9IHRoaXMuJHJlZnNbdGhpcy5yZWZdLnN0b3JlCiAgICAgIGNvbnN0IGFsbE5vZGVzID0gZWxUcmVlU3RvcmUuX2dldEFsbE5vZGVzKCkuZmlsdGVyKCh7IHZpc2libGUgfSkgPT4gdmlzaWJsZSkKICAgICAgaWYgKGNoZWNrZWRLZXlzLmxlbmd0aCkgewogICAgICAgIGlmIChjaGVja2VkS2V5cy5sZW5ndGggPT09IGFsbE5vZGVzLmxlbmd0aCkgewogICAgICAgICAgdGhpcy5jaGVja0FsbCA9IHRydWUKICAgICAgICAgIHRoaXMuaXNJbmRldGVybWluYXRlID0gZmFsc2UKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5jaGVja0FsbCA9IGZhbHNlCiAgICAgICAgICB0aGlzLmlzSW5kZXRlcm1pbmF0ZSA9IHRydWUKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pc0luZGV0ZXJtaW5hdGUgPSBmYWxzZQogICAgICAgIHRoaXMuY2hlY2tBbGwgPSBmYWxzZQogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8g57uR5a6aIGVsLXRyZWUg5pa55rOVCiAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy4kcmVmc1t0aGlzLnJlZl0pIHsKICAgICAgaWYgKCEoa2V5IGluIHRoaXMpICYmIHR5cGVvZiB0aGlzLiRyZWZzW3RoaXMucmVmXVtrZXldID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgdGhpc1trZXldID0gdGhpcy4kcmVmc1t0aGlzLnJlZl1ba2V5XS5iaW5kKHRoaXMuJHJlZnNbdGhpcy5yZWZdKQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Tree1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Tree1.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div class=\"b-tree\">\n    <el-checkbox\n      v-if=\"showCheckAll && showCheckbox\"\n      class=\"b-tree-check-all\"\n      :indeterminate=\"isIndeterminate\"\n      v-model=\"checkAll\"\n      @change=\"handleCheckAllChange\"\n      >全选</el-checkbox\n    >\n    <el-tree\n      :ref=\"ref\"\n      v-bind=\"$attrs\"\n      :node-key=\"nodeKey\"\n      :show-checkbox=\"showCheckbox\"\n      v-on=\"$listeners\"\n      @check=\"handleCheck\"\n    >\n      <slot slot-scope=\"{ node, data }\" v-bind=\"{ node, data }\"> {{ node.label }} </slot>\n    </el-tree>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Tree1',\n  props: {\n    nodeKey: {\n      type: String,\n      default: 'id'\n    },\n    showCheckAll: {\n      type: Boolean,\n      default: false\n    },\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    },\n    level: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      ref: 'elTree',\n      isIndeterminate: false,\n      checkAll: false\n    }\n  },\n  watch: {\n    level: {\n      handler: 'expandToLevel',\n      immediate: true\n    }\n  },\n  methods: {\n    /**\n     * @method 展开至指定层级\n     * @param {Number} level 要展开至几级？0, 1, 2, 3...\n     **/\n    expandToLevel(level) {\n      this.$nextTick(() => {\n        const elTreeStore = this.$refs[this.ref].store\n        const allNodes = elTreeStore._getAllNodes().sort((a, b) => b.level - a.level)\n        if (level === 0) {\n          // 展开全部\n          allNodes.forEach(node => {\n            node.isLeaf && node.expand(null, true)\n          })\n        } else {\n          allNodes.forEach(node => {\n            if (node.level >= level) {\n              node.expanded = false\n            } else {\n              node.expanded = true\n            }\n          })\n        }\n      })\n    },\n    // 处理全选\n    handleCheckAllChange() {\n      this.isIndeterminate = false\n      let checkedKeys = []\n      if (this.checkAll) {\n        const elTreeStore = this.$refs[this.ref].store\n        const checkedNodes = elTreeStore._getAllNodes().filter(({ visible }) => visible)\n        checkedKeys = checkedNodes.map(({ key }) => key)\n        this.$emit(\n          'check',\n          { [this.$refs[this.ref].props.label || 'label']: '全选' },\n          {\n            checkedNodes,\n            checkedKeys,\n            halfCheckedNodes: [],\n            halfCheckedKeys: []\n          }\n        )\n      } else {\n        this.$emit(\n          'check',\n          { [this.$refs[this.ref].props.label || 'label']: '全选' },\n          {\n            checkedNodes: [],\n            checkedKeys: [],\n            halfCheckedNodes: [],\n            halfCheckedKeys: []\n          }\n        )\n      }\n      this.$refs[this.ref].setCheckedKeys(checkedKeys)\n    },\n    // el-tree 复选框被点击\n    handleCheck(data, checked) {\n      if (!this.showCheckAll || !this.showCheckbox) {\n        return\n      }\n      const { checkedKeys } = checked\n      const elTreeStore = this.$refs[this.ref].store\n      const allNodes = elTreeStore._getAllNodes().filter(({ visible }) => visible)\n      if (checkedKeys.length) {\n        if (checkedKeys.length === allNodes.length) {\n          this.checkAll = true\n          this.isIndeterminate = false\n        } else {\n          this.checkAll = false\n          this.isIndeterminate = true\n        }\n      } else {\n        this.isIndeterminate = false\n        this.checkAll = false\n      }\n    }\n  },\n  mounted() {\n    // 绑定 el-tree 方法\n    for (let key in this.$refs[this.ref]) {\n      if (!(key in this) && typeof this.$refs[this.ref][key] === 'function') {\n        this[key] = this.$refs[this.ref][key].bind(this.$refs[this.ref])\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.b-tree {\n  color: #606266;\n  .b-tree-check-all {\n    padding-left: 8px;\n    font-weight: normal;\n    .el-checkbox__label {\n      color: #606266;\n    }\n  }\n}\n</style>\n"]}]}