{"remainingRequest":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/Tree3.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/Tree3.vue","mtime":1598337886633},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHJlZTMnLAogIHByb3BzOiB7CiAgICBkYXRhOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXQogICAgICB9CiAgICB9LAogICAgbm9kZUtleTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdpZCcKICAgIH0sCiAgICBzaG93Q2hlY2tBbGw6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBzaG93Q2hlY2tib3g6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBsZXZlbDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0cmVlRGF0YTogW10sCiAgICAgIHJlZjogJ2VsVHJlZScsCiAgICAgIGNoZWNrQWxsSWQ6ICdfX3Jvb3RJZF9fJwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGRhdGE6IHsKICAgICAgaGFuZGxlcjogJ2hhbmRsZURhdGEnLAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0sCiAgICBsZXZlbDogewogICAgICBoYW5kbGVyOiAnZXhwYW5kVG9MZXZlbCcsCiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzQ2hlY2tBbGwoKSB7CiAgICAgIHJldHVybiB0aGlzLnNob3dDaGVja0FsbCAmJiB0aGlzLnNob3dDaGVja2JveAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiBAbWV0aG9kIOWxleW8gOiHs+aMh+WumuWxgue6pwogICAgICogQHBhcmFtIHtOdW1iZXJ9IGxldmVsIOimgeWxleW8gOiHs+WHoOe6p++8nzAsIDEsIDIsIDMuLi4KICAgICAqKi8KICAgIGV4cGFuZFRvTGV2ZWwobGV2ZWwpIHsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIGNvbnN0IGVsVHJlZVN0b3JlID0gdGhpcy4kcmVmc1t0aGlzLnJlZl0uc3RvcmUKICAgICAgICBjb25zdCBhbGxOb2RlcyA9IGVsVHJlZVN0b3JlLl9nZXRBbGxOb2RlcygpLnNvcnQoKGEsIGIpID0+IGIubGV2ZWwgLSBhLmxldmVsKQogICAgICAgIGNvbnNvbGUubG9nKCdleHBhbmRUb0xldmVsIC0+IGVsVHJlZVN0b3JlLl9nZXRBbGxOb2RlcygpJywgZWxUcmVlU3RvcmUuX2dldEFsbE5vZGVzKCkpCiAgICAgICAgaWYgKGxldmVsID09PSAwKSB7CiAgICAgICAgICAvLyDlsZXlvIDlhajpg6gKICAgICAgICAgIGFsbE5vZGVzLmZvckVhY2gobm9kZSA9PiB7CiAgICAgICAgICAgIG5vZGUuaXNMZWFmICYmIG5vZGUuZXhwYW5kKG51bGwsIHRydWUpCiAgICAgICAgICB9KQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhbGxOb2Rlcy5mb3JFYWNoKG5vZGUgPT4gewogICAgICAgICAgICBpZiAobm9kZS5sZXZlbCA+PSBsZXZlbCkgewogICAgICAgICAgICAgIG5vZGUuZXhwYW5kZWQgPSBmYWxzZQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG5vZGUuZXhwYW5kZWQgPSB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZURhdGEoKSB7CiAgICAgIGlmICh0aGlzLmlzQ2hlY2tBbGwgJiYgdGhpcy5kYXRhLmxlbmd0aCkgewogICAgICAgIHRoaXMudHJlZURhdGEgPSBbCiAgICAgICAgICB7CiAgICAgICAgICAgIFt0aGlzLiRyZWZzW3RoaXMucmVmXS5wcm9wcy5sYWJlbF06ICflhajpgIknLAogICAgICAgICAgICBbdGhpcy5ub2RlS2V5XTogdGhpcy5jaGVja0FsbElkLAogICAgICAgICAgICBbdGhpcy4kcmVmc1t0aGlzLnJlZl0ucHJvcHMuY2hpbGRyZW5dOiB0aGlzLmRhdGEKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy50cmVlRGF0YSA9IHRoaXMuZGF0YQogICAgICB9CiAgICB9LAogICAgZ2V0Q2hlY2tlZE5vZGVzKGxlYWZPbmx5LCBpbmNsdWRlSGFsZkNoZWNrZWQpIHsKICAgICAgaWYgKHRoaXMuaXNDaGVja0FsbCkgewogICAgICAgIHJldHVybiB0aGlzLiRyZWZzW3RoaXMucmVmXQogICAgICAgICAgLmdldENoZWNrZWROb2RlcyhsZWFmT25seSwgaW5jbHVkZUhhbGZDaGVja2VkKQogICAgICAgICAgLmZpbHRlcihub2RlID0+IG5vZGVbdGhpcy5ub2RlS2V5XSAhPT0gdGhpcy5jaGVja0FsbElkKQogICAgICB9CiAgICAgIHJldHVybiB0aGlzLiRyZWZzW3RoaXMucmVmXS5nZXRDaGVja2VkTm9kZXMobGVhZk9ubHksIGluY2x1ZGVIYWxmQ2hlY2tlZCkKICAgIH0sCiAgICBnZXRIYWxmQ2hlY2tlZE5vZGVzKCkgewogICAgICBpZiAodGhpcy5pc0NoZWNrQWxsKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnNbdGhpcy5yZWZdCiAgICAgICAgICAuZ2V0SGFsZkNoZWNrZWROb2RlcygpCiAgICAgICAgICAuZmlsdGVyKG5vZGUgPT4gbm9kZVt0aGlzLm5vZGVLZXldICE9PSB0aGlzLmNoZWNrQWxsSWQpCiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuJHJlZnNbdGhpcy5yZWZdLmdldEhhbGZDaGVja2VkTm9kZXMoKQogICAgfSwKICAgIGdldENoZWNrZWRLZXlzKGxlYWZPbmx5KSB7CiAgICAgIGlmICh0aGlzLmlzQ2hlY2tBbGwpIHsKICAgICAgICByZXR1cm4gdGhpcy4kcmVmc1t0aGlzLnJlZl0uZ2V0Q2hlY2tlZEtleXMobGVhZk9ubHkpLmZpbHRlcihrZXkgPT4ga2V5ICE9PSB0aGlzLmNoZWNrQWxsSWQpCiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuJHJlZnNbdGhpcy5yZWZdLmdldENoZWNrZWRLZXlzKGxlYWZPbmx5KQogICAgfSwKICAgIGdldEhhbGZDaGVja2VkS2V5cygpIHsKICAgICAgaWYgKHRoaXMuaXNDaGVja0FsbCkgewogICAgICAgIHJldHVybiB0aGlzLiRyZWZzW3RoaXMucmVmXS5nZXRIYWxmQ2hlY2tlZEtleXMoKS5maWx0ZXIoa2V5ID0+IGtleSAhPT0gdGhpcy5jaGVja0FsbElkKQogICAgICB9CiAgICAgIHJldHVybiB0aGlzLiRyZWZzW3RoaXMucmVmXS5nZXRIYWxmQ2hlY2tlZEtleXMoKQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIC8vIOe7keWumiBlbC10cmVlIOaWueazlQogICAgZm9yIChsZXQga2V5IGluIHRoaXMuJHJlZnNbdGhpcy5yZWZdKSB7CiAgICAgIGlmICghKGtleSBpbiB0aGlzKSAmJiB0eXBlb2YgdGhpcy4kcmVmc1t0aGlzLnJlZl1ba2V5XSA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHRoaXNba2V5XSA9IHRoaXMuJHJlZnNbdGhpcy5yZWZdW2tleV0uYmluZCh0aGlzLiRyZWZzW3RoaXMucmVmXSkKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["Tree3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"Tree3.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div class=\"b-tree\">\n    <el-tree\n      :ref=\"ref\"\n      v-bind=\"$attrs\"\n      :data=\"treeData\"\n      :node-key=\"nodeKey\"\n      :show-checkbox=\"showCheckbox\"\n      v-on=\"$listeners\"\n    >\n      <slot slot-scope=\"{ node, data }\" v-bind=\"{ node, data }\"> {{ node.label }} </slot>\n    </el-tree>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Tree3',\n  props: {\n    data: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    nodeKey: {\n      type: String,\n      default: 'id'\n    },\n    showCheckAll: {\n      type: Boolean,\n      default: false\n    },\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    },\n    level: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      treeData: [],\n      ref: 'elTree',\n      checkAllId: '__rootId__'\n    }\n  },\n  watch: {\n    data: {\n      handler: 'handleData',\n      immediate: true\n    },\n    level: {\n      handler: 'expandToLevel',\n      immediate: true\n    }\n  },\n  computed: {\n    isCheckAll() {\n      return this.showCheckAll && this.showCheckbox\n    }\n  },\n  methods: {\n    /**\n     * @method 展开至指定层级\n     * @param {Number} level 要展开至几级？0, 1, 2, 3...\n     **/\n    expandToLevel(level) {\n      this.$nextTick(() => {\n        const elTreeStore = this.$refs[this.ref].store\n        const allNodes = elTreeStore._getAllNodes().sort((a, b) => b.level - a.level)\n        console.log('expandToLevel -> elTreeStore._getAllNodes()', elTreeStore._getAllNodes())\n        if (level === 0) {\n          // 展开全部\n          allNodes.forEach(node => {\n            node.isLeaf && node.expand(null, true)\n          })\n        } else {\n          allNodes.forEach(node => {\n            if (node.level >= level) {\n              node.expanded = false\n            } else {\n              node.expanded = true\n            }\n          })\n        }\n      })\n    },\n    handleData() {\n      if (this.isCheckAll && this.data.length) {\n        this.treeData = [\n          {\n            [this.$refs[this.ref].props.label]: '全选',\n            [this.nodeKey]: this.checkAllId,\n            [this.$refs[this.ref].props.children]: this.data\n          }\n        ]\n      } else {\n        this.treeData = this.data\n      }\n    },\n    getCheckedNodes(leafOnly, includeHalfChecked) {\n      if (this.isCheckAll) {\n        return this.$refs[this.ref]\n          .getCheckedNodes(leafOnly, includeHalfChecked)\n          .filter(node => node[this.nodeKey] !== this.checkAllId)\n      }\n      return this.$refs[this.ref].getCheckedNodes(leafOnly, includeHalfChecked)\n    },\n    getHalfCheckedNodes() {\n      if (this.isCheckAll) {\n        return this.$refs[this.ref]\n          .getHalfCheckedNodes()\n          .filter(node => node[this.nodeKey] !== this.checkAllId)\n      }\n      return this.$refs[this.ref].getHalfCheckedNodes()\n    },\n    getCheckedKeys(leafOnly) {\n      if (this.isCheckAll) {\n        return this.$refs[this.ref].getCheckedKeys(leafOnly).filter(key => key !== this.checkAllId)\n      }\n      return this.$refs[this.ref].getCheckedKeys(leafOnly)\n    },\n    getHalfCheckedKeys() {\n      if (this.isCheckAll) {\n        return this.$refs[this.ref].getHalfCheckedKeys().filter(key => key !== this.checkAllId)\n      }\n      return this.$refs[this.ref].getHalfCheckedKeys()\n    }\n  },\n  mounted() {\n    // 绑定 el-tree 方法\n    for (let key in this.$refs[this.ref]) {\n      if (!(key in this) && typeof this.$refs[this.ref][key] === 'function') {\n        this[key] = this.$refs[this.ref][key].bind(this.$refs[this.ref])\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.b-tree {\n  color: #606266;\n  .b-tree-check-all {\n    padding-left: 8px;\n    font-weight: normal;\n    .el-checkbox__label {\n      color: #606266;\n    }\n  }\n}\n</style>\n"]}]}