{"remainingRequest":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/BarChart.vue","mtime":1598335556138},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BarChart.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div class=\"echarts-container\">\n    <chart\n      ref=\"bar\"\n      :options=\"polar\"\n      auto-resize\n      v-if=\"options.xAxis && options.xAxis.length\"\n      @click=\"handleBarClick\"\n    ></chart>\n    <no-data :title=\"title\" v-else></no-data>\n  </div>\n</template>\n\n<script>\nimport echarts from 'echarts'\nexport default {\n  name: 'BarChart',\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {\n      polar: {},\n      title: '',\n      textColor: '#333',\n      baseColor: [\n        '#2e8a00',\n        '#007fff',\n        '#fe90bf',\n        '#11feef',\n        '#ff3890',\n        '#ff644b',\n        '#29c342',\n        '#ff9600',\n        '#a34be0',\n        '#11b0ff'\n      ],\n      baseColors: [\n        ['#4cc3ff', '#00aaff'],\n        ['#d075eb', '#bc15fa'],\n        ['#f8cf5c', '#fdba00'],\n        ['#80ff94', '#1bb934'],\n        ['#b8acfe', '#755ffc'],\n        ['#ff9897', '#f650a0'],\n        ['#ffa62e', '#ea5c0f'],\n        ['#49fed4', '#04c792'],\n        ['#7789f9', '#2a4ff3'],\n        ['#fc557c', '#fe2457']\n      ]\n    }\n  },\n  watch: {\n    options: {\n      handler: 'renderChart',\n      deep: true\n    }\n  },\n  methods: {\n    renderChart() {\n      const { xAxis, yAxis } = this.options\n      if (!xAxis || !yAxis || !xAxis.length || !yAxis.length) {\n        return\n      }\n      let that = this\n      const {\n        text = '',\n        isZoom = reverse ? yAxis && yAxis.length > 10 : xAxis && xAxis.length > 10,\n        color = this.baseColor,\n        textColor = this.textColor,\n        textFontSize = 18,\n        subtext,\n        subtextColor = this.textColor,\n        subtextFontSize = 12,\n        titleTop = 'auto',\n        titleLeft = 'center',\n        backgroundColor = 'transparent',\n        showLegend,\n        legend,\n        hideTooltip,\n        legendTop = 25,\n        legendColor = this.textColor,\n        legendFontSize = 12,\n        tooltipType = 'shadow',\n        tooltipFormatter = null,\n        hideToolBox,\n        toolboxName = text,\n        hideImage,\n        toolboxRight = 25,\n        toolboxTop = 25,\n        gridLeft = '3%',\n        gridRight = '3%',\n        gridBottom = '3%',\n        gridTop = '15%',\n        hidexAxis,\n        hidexAxisLine,\n        xAxisColor = this.textColor,\n        hidexAxisTick,\n        xAxisTickColor = this.textColor,\n        xAxisTickType = 'solid',\n        xAxisLabelColor = this.textColor,\n        xAxisFontSize = 12,\n        xAxisLabelInterval = 0,\n        xAxisLabelRotate = 0,\n        xAxisMaxLength = 8,\n        minRange = null,\n        maxRange = null,\n        yAxisSplitNumber = 5,\n        hideyAxis,\n        hideyAxisLine,\n        yAxisColor = this.textColor,\n        hideyAxisTick,\n        yAxisTickColor = this.textColor,\n        yAxisTickType = 'solid',\n        yAxisLabelColor = this.textColor,\n        yAxisFontSize = 12,\n        yAxisSplitLineColor = this.textColor,\n        yAxisSplitLineType = 'solid',\n        isStack,\n        showLabel,\n        labelPosition = 'top',\n        labelColor = this.textColor,\n        labelFontSize = 12,\n        isGradient,\n        reverse,\n        id\n      } = this.options\n      this.title = text || toolboxName\n      this.polar = {\n        color,\n        // 标题\n        title: {\n          text,\n          textStyle: {\n            color: textColor,\n            fontSize: textFontSize\n          },\n          subtext: subtext || (isZoom ? '当前数据较多，请滚动鼠标或缩放屏幕查看完整数据' : ''),\n          subtextStyle: {\n            color: subtextColor,\n            fontSize: subtextFontSize\n          },\n          top: titleTop,\n          left: titleLeft,\n          backgroundColor\n        },\n        // 图例\n        legend: {\n          type: 'scroll', // 只有容器放不下图例, scroll 才会生效\n          show: this.$utils.checkParam(showLegend, legend && legend.length > 1),\n          data: legend || [text],\n          right: !hideTooltip ? 60 : 0,\n          top: legendTop,\n          textStyle: {\n            color: legendColor,\n            fontSize: legendFontSize\n          }\n        },\n        // 提示框\n        tooltip: {\n          show: !hideTooltip,\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: tooltipType // 默认为直线，可选为：'line' | 'shadow'\n          },\n          formatter: tooltipFormatter\n        },\n        // 工具栏\n        toolbox: {\n          show: !hideToolBox,\n          feature: {\n            saveAsImage: {\n              show: !hideImage,\n              name: toolboxName,\n              backgroundColor: 'rgba(0, 35, 55, 0.4)'\n            }\n          },\n          right: toolboxRight,\n          top: toolboxTop,\n          iconStyle: {\n            normal: {\n              borderColor: this.textColor\n            }\n          }\n        },\n        // 直角坐标系内绘图网格\n        grid: {\n          left: gridLeft,\n          right: gridRight,\n          bottom: gridBottom,\n          top: gridTop,\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: 'category',\n            show: !hidexAxis,\n            data: xAxis,\n            // 坐标轴轴线\n            axisLine: {\n              show: !hidexAxisLine,\n              lineStyle: {\n                color: xAxisColor\n              }\n            },\n            // 坐标轴刻度\n            axisTick: {\n              show: !hidexAxisTick,\n              alignWithLabel: true,\n              lineStyle: {\n                type: xAxisTickType,\n                color: xAxisTickColor\n              }\n            },\n            // 坐标轴刻度标签\n            axisLabel: {\n              color: xAxisLabelColor,\n              fontSize: xAxisFontSize,\n              // 坐标轴刻度标签的显示间隔，在类目轴中有效。可以设置成 0 强制显示所有标签。\n              interval: xAxisLabelInterval,\n              rotate: xAxisLabelRotate,\n              formatter(value) {\n                // let ret = '' // 拼接加\\n返回的类目项\n                // xAxisMaxLength 每项显示文字个数\n                let valLength = value.length // X轴类目项的文字个数\n                let rowN = Math.ceil(valLength / xAxisMaxLength) // 类目项需要换行的行数\n                if (rowN > 1) {\n                  // 如果类目项的文字大于 xAxisMaxLength,\n                  // for (let i = 0; i < rowN; i++) {\n                  //   let temp = '' // 每次截取的字符串\n                  //   let start = i * xAxisMaxLength // 开始截取的位置\n                  //   let end = start + xAxisMaxLength // 结束截取的位置\n                  //   // 这里加一个是否是最后一行的判断\n                  //   temp = value.substring(start, end) + (i === rowN - 1 ? '' : '\\n')\n                  //   ret += temp // 拼接最终的字符串\n                  // }\n                  // return ret\n                  return value.substring(0, xAxisMaxLength) + '…'\n                } else {\n                  return value\n                }\n              }\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            min: minRange,\n            max: maxRange,\n            splitNumber: yAxisSplitNumber,\n            show: !hideyAxis,\n            axisLine: {\n              show: !hideyAxisLine,\n              lineStyle: {\n                color: yAxisColor\n              }\n            },\n            // 坐标轴刻度\n            axisTick: {\n              show: !hideyAxisTick,\n              alignWithLabel: true,\n              lineStyle: {\n                type: yAxisTickType,\n                color: yAxisTickColor\n              }\n            },\n            // 坐标轴刻度标签\n            axisLabel: {\n              color: yAxisLabelColor,\n              fontSize: yAxisFontSize\n            },\n            splitLine: {\n              lineStyle: {\n                type: yAxisSplitLineType,\n                color: yAxisSplitLineColor\n              }\n            }\n          }\n        ]\n      }\n      // 多例\n      if (legend && legend.length > 1) {\n        this.polar.series = legend.map((item, index) => ({\n          name: item,\n          type: 'bar',\n          ...(isStack && { stack: '总量' }),\n          barMaxWidth: 25,\n          data: yAxis[index],\n          label: {\n            show: showLabel,\n            position: labelPosition,\n            color: labelColor,\n            fontSize: labelFontSize\n          }\n        }))\n        // 单例\n      } else {\n        let color0 = ''\n        let color1 = ''\n        // 是否渐变\n        if (isGradient) {\n          if (color && color[0] && color[1]) {\n            color0 = color[0]\n            color1 = color[1]\n          } else {\n            color0 = this.baseColors[0][0]\n            color1 = this.baseColors[0][1]\n          }\n        } else {\n          if (color && color[0]) {\n            color0 = color[0]\n            color1 = color[0]\n          } else {\n            color0 = this.baseColor[0]\n            color1 = this.baseColor[0]\n          }\n        }\n        this.polar.series = [\n          {\n            name: legend ? legend[0] : text,\n            type: 'bar',\n            barMaxWidth: 25,\n            data: yAxis,\n            label: {\n              show: showLabel,\n              position: labelPosition,\n              color: labelColor,\n              fontSize: labelFontSize\n            },\n            itemStyle: {\n              // 渐变\n              normal: {\n                color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\n                  {\n                    offset: 0,\n                    color: color0\n                  },\n                  {\n                    offset: 1,\n                    color: color1\n                  }\n                ]),\n                barBorderRadius: 4\n              }\n            }\n          }\n        ]\n      }\n      // 开启缩放\n      if (isZoom) {\n        this.polar.dataZoom = [\n          {\n            type: 'inside',\n            show: true,\n            xAxisIndex: [0],\n            start: 1,\n            end: 35\n          }\n        ]\n      }\n      // 开启反转\n      if (reverse) {\n        ;[this.polar.xAxis, this.polar.yAxis] = [this.polar.yAxis, this.polar.xAxis]\n        this.polar.yAxis[0].data = [...xAxis].reverse()\n        this.polar.series = [\n          {\n            name: legend ? legend[0] : text,\n            type: 'bar',\n            barMaxWidth: 25,\n            data: [...yAxis].reverse(),\n            id: this.$utils.checkParam(id, null),\n            label: {\n              show: showLabel,\n              position: labelPosition,\n              color: labelColor,\n              fontSize: labelFontSize\n            },\n            itemStyle: isGradient\n              ? {\n                  normal: {\n                    color(params) {\n                      let index = color\n                        ? params.dataIndex % color.length\n                        : params.dataIndex % that.baseColors.length\n                      return new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n                        {\n                          offset: 0,\n                          color: color ? color[index][0] : that.baseColors[index][0]\n                        },\n                        {\n                          offset: 1,\n                          color: color ? color[index][1] : that.baseColors[index][1]\n                        }\n                      ])\n                    },\n                    barBorderRadius: 40\n                  }\n                }\n              : {\n                  normal: {\n                    color(params) {\n                      let index = color\n                        ? params.dataIndex % color.length\n                        : params.dataIndex % that.baseColors.length\n                      return new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n                        {\n                          offset: 0,\n                          color: color ? color[index] : that.baseColor[index]\n                        },\n                        {\n                          offset: 1,\n                          color: color ? color[index] : that.baseColor[index]\n                        }\n                      ])\n                    },\n                    barBorderRadius: 40\n                  }\n                }\n          }\n        ]\n        // 开启缩放\n        if (isZoom) {\n          this.polar.dataZoom = [\n            {\n              type: 'inside',\n              show: true,\n              yAxisIndex: [0],\n              start: 1,\n              end: 35\n            }\n          ]\n        }\n      }\n    },\n    handleBarClick(event) {\n      this.$emit('item-click', event, this.options.xAxis)\n    }\n  },\n  mounted() {\n    this.renderChart()\n  }\n}\n</script>\n"]}]}