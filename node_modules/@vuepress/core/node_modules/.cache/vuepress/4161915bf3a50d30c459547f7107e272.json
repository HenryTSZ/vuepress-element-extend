{"remainingRequest":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/LineChart.vue","mtime":1598335763398},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTGluZUNoYXJ0JywKICBwcm9wczogewogICAgb3B0aW9uczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb2xhcjoge30sCiAgICAgIHRpdGxlOiAnJywKICAgICAgdGV4dENvbG9yOiAnIzMzMycsCiAgICAgIGJhc2VDb2xvcjogWwogICAgICAgICcjMmU4YTAwJywKICAgICAgICAnIzAwN2ZmZicsCiAgICAgICAgJyNmZTkwYmYnLAogICAgICAgICcjMTFmZWVmJywKICAgICAgICAnI2ZmMzg5MCcsCiAgICAgICAgJyNmZjY0NGInLAogICAgICAgICcjMjljMzQyJywKICAgICAgICAnI2ZmOTYwMCcsCiAgICAgICAgJyNhMzRiZTAnLAogICAgICAgICcjMTFiMGZmJwogICAgICBdCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgb3B0aW9uczogewogICAgICBoYW5kbGVyOiAncmVuZGVyQ2hhcnQnLAogICAgICBkZWVwOiB0cnVlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZW5kZXJDaGFydCgpIHsKICAgICAgY29uc3QgeyB4QXhpcywgeUF4aXMgfSA9IHRoaXMub3B0aW9ucwogICAgICBpZiAoIXhBeGlzIHx8ICF5QXhpcyB8fCAheEF4aXMubGVuZ3RoIHx8ICF5QXhpcy5sZW5ndGgpIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBjb25zdCB7CiAgICAgICAgdGV4dCA9ICcnLAogICAgICAgIGlzWm9vbSA9IHhBeGlzICYmIHhBeGlzLmxlbmd0aCA+IDEwLAogICAgICAgIGhpZGVNYXJrLAogICAgICAgIGNvbG9yID0gdGhpcy5iYXNlQ29sb3IsCiAgICAgICAgdGV4dENvbG9yID0gdGhpcy50ZXh0Q29sb3IsCiAgICAgICAgdGV4dEZvbnRTaXplID0gMTgsCiAgICAgICAgc3VidGV4dCwKICAgICAgICBzdWJ0ZXh0Q29sb3IgPSB0aGlzLnRleHRDb2xvciwKICAgICAgICBzdWJ0ZXh0Rm9udFNpemUgPSAxMiwKICAgICAgICB0aXRsZUxlZnQgPSAnY2VudGVyJywKICAgICAgICBzaG93TGVnZW5kLAogICAgICAgIGxlZ2VuZCwKICAgICAgICBoaWRlVG9vbHRpcCwKICAgICAgICBsZWdlbmRUb3AgPSAzNSwKICAgICAgICBsZWdlbmRDb2xvciA9IHRoaXMudGV4dENvbG9yLAogICAgICAgIHRvb2x0aXBUeXBlID0gJ2xpbmUnLAogICAgICAgIHRvb2x0aXBGb3JtYXR0ZXIgPSBudWxsLAogICAgICAgIGhpZGVUb29sQm94LAogICAgICAgIGhpZGVJbWFnZSwKICAgICAgICB0b29sYm94TmFtZSA9IHRleHQsCiAgICAgICAgdG9vbGJveFJpZ2h0ID0gMjUsCiAgICAgICAgdG9vbGJveFRvcCA9IDIwLAogICAgICAgIGdyaWRMZWZ0ID0gJzMlJywKICAgICAgICBncmlkUmlnaHQgPSAnMyUnLAogICAgICAgIGdyaWRCb3R0b20gPSAnMyUnLAogICAgICAgIGdyaWRUb3AgPSAnMTUlJywKICAgICAgICBoaWRleEF4aXMsCiAgICAgICAgaGlkZUF4aXNMaW5lLAogICAgICAgIHhBeGlzQ29sb3IgPSB0aGlzLnRleHRDb2xvciwKICAgICAgICBzaG93eEF4aXNTcGxpdExpbmUsCiAgICAgICAgeEF4aXNMaW5lT3BhY2l0eSA9IDEsCiAgICAgICAgeEF4aXNUaWNrTGVuZ3RoID0gNSwKICAgICAgICBoaWRleEF4aXNMYWJlbCwKICAgICAgICB4QXhpc0xhYmVsQ29sb3IgPSB0aGlzLnRleHRDb2xvciwKICAgICAgICB4QXhpc0xhYmVsRm9udFNpemUgPSAxMiwKICAgICAgICB4QXhpc0xhYmVsSW50ZXJ2YWwgPSAwLAogICAgICAgIHhBeGlzTWF4TGVuZ3RoID0gOCwKICAgICAgICBtaW5SYW5nZSA9IG51bGwsCiAgICAgICAgbWF4UmFuZ2UgPSBudWxsLAogICAgICAgIHlBeGlzU3BsaXROdW1iZXIgPSA1LAogICAgICAgIGhpZGV5QXhpcywKICAgICAgICB5QXhpc0NvbG9yID0gdGhpcy50ZXh0Q29sb3IsCiAgICAgICAgaGlkZXlBeGlzU3BsaXRMaW5lLAogICAgICAgIHlBeGlzU3BsaXRMaW5lQ29sb3IgPSB0aGlzLnRleHRDb2xvciwKICAgICAgICB5QXhpc1NwbGl0TGluZU9wYWNpdHkgPSAxLAogICAgICAgIHlBeGlzVGlja0xlbmd0aCA9IDUsCiAgICAgICAgaWQsCiAgICAgICAgc2hvd0xhYmVsLAogICAgICAgIHNtb290aCA9IGZhbHNlLAogICAgICAgIGxhYmVsRm9udFNpemUgPSAxMiwKICAgICAgICBsYWJlbEZvbnRXZWlnaHQgPSAnbm9ybWFsJywKICAgICAgICBsYWJlbEZvcm1hdCA9ICd7Y30nLAogICAgICAgIGxhYmVsT2Zmc2V0ID0gWzAsIDI1XSwKICAgICAgICBzeW1ib2xTaXplLAogICAgICAgIGFyZWFPcGFjaXR5ID0gMAogICAgICB9ID0gdGhpcy5vcHRpb25zCiAgICAgIHRoaXMudGl0bGUgPSB0ZXh0IHx8IHRvb2xib3hOYW1lIHx8ICcnCiAgICAgIGxldCBtYXJrRGF0YSA9IFtdCiAgICAgIC8vIOW9k+W8gOWQr+e8qeaUvuWQju+8jOS4jeiDveS9v+eUqOawlOeQg+agt+W8jwogICAgICBpZiAoIWlzWm9vbSAmJiAhaGlkZU1hcmspIHsKICAgICAgICBpZiAoeUF4aXMgJiYgQXJyYXkuaXNBcnJheSh5QXhpcykpIHsKICAgICAgICAgIG1hcmtEYXRhID0geUF4aXMubWFwKChpdGVtLCBpbmRleCkgPT4gKHsKICAgICAgICAgICAgY29vcmQ6IFtpbmRleCwgaXRlbV0sCiAgICAgICAgICAgIHZhbHVlOiBpdGVtCiAgICAgICAgICB9KSkKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5wb2xhciA9IHsKICAgICAgICBjb2xvciwKICAgICAgICAvLyDmoIfpopgKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dCwKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBjb2xvcjogdGV4dENvbG9yLAogICAgICAgICAgICBmb250U2l6ZTogdGV4dEZvbnRTaXplCiAgICAgICAgICB9LAogICAgICAgICAgc3VidGV4dDogc3VidGV4dCB8fCAoaXNab29tID8gJ+W9k+WJjeaVsOaNrui+g+Wkmu+8jOivt+a7muWKqOm8oOagh+aIlue8qeaUvuWxj+W5leafpeeci+WujOaVtOaVsOaNricgOiAnJyksCiAgICAgICAgICBzdWJ0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6IHN1YnRleHRDb2xvciwKICAgICAgICAgICAgZm9udFNpemU6IHN1YnRleHRGb250U2l6ZQogICAgICAgICAgfSwKICAgICAgICAgIGxlZnQ6IHRpdGxlTGVmdAogICAgICAgIH0sCiAgICAgICAgLy8g5Zu+5L6LCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICB0eXBlOiAnc2Nyb2xsJywgLy8g5Y+q5pyJ5a655Zmo5pS+5LiN5LiL5Zu+5L6LLCBzY3JvbGwg5omN5Lya55Sf5pWICiAgICAgICAgICBzaG93OiB0aGlzLiR1dGlscy5jaGVja1BhcmFtKHNob3dMZWdlbmQsIGxlZ2VuZCAmJiBsZWdlbmQubGVuZ3RoID4gMSksCiAgICAgICAgICBkYXRhOiBsZWdlbmQgfHwgW3RleHRdLAogICAgICAgICAgcmlnaHQ6ICFoaWRlVG9vbHRpcCA/IDUwIDogMjAsCiAgICAgICAgICB0b3A6IGxlZ2VuZFRvcCwKICAgICAgICAgIGl0ZW1XaWR0aDogNDAsCiAgICAgICAgICBpdGVtSGVpZ2h0OiAyMCwKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBjb2xvcjogbGVnZW5kQ29sb3IKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8vIOaPkOekuuahhgogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHNob3c6ICFoaWRlVG9vbHRpcCwKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIC8vIOWdkOagh+i9tOaMh+ekuuWZqO+8jOWdkOagh+i9tOinpuWPkeacieaViAogICAgICAgICAgICB0eXBlOiB0b29sdGlwVHlwZSAvLyDpu5jorqTkuLrnm7Tnur/vvIzlj6/pgInkuLrvvJonbGluZScgfCAnc2hhZG93JwogICAgICAgICAgfSwKICAgICAgICAgIGZvcm1hdHRlcjogdG9vbHRpcEZvcm1hdHRlcgogICAgICAgIH0sCiAgICAgICAgLy8g5bel5YW35qCPCiAgICAgICAgdG9vbGJveDogewogICAgICAgICAgc2hvdzogIWhpZGVUb29sQm94LAogICAgICAgICAgZmVhdHVyZTogewogICAgICAgICAgICBzYXZlQXNJbWFnZTogewogICAgICAgICAgICAgIHNob3c6ICFoaWRlSW1hZ2UsCiAgICAgICAgICAgICAgbmFtZTogdG9vbGJveE5hbWUsCiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLCAzNSwgNTUsIDEpJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgcmlnaHQ6IHRvb2xib3hSaWdodCwKICAgICAgICAgIHRvcDogdG9vbGJveFRvcCwKICAgICAgICAgIGljb25TdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBib3JkZXJDb2xvcjogdGhpcy50ZXh0Q29sb3IKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgLy8g55u06KeS5Z2Q5qCH57O75YaF57uY5Zu+572R5qC8CiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogZ3JpZExlZnQsCiAgICAgICAgICByaWdodDogZ3JpZFJpZ2h0LAogICAgICAgICAgYm90dG9tOiBncmlkQm90dG9tLAogICAgICAgICAgdG9wOiBncmlkVG9wLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogWwogICAgICAgICAgewogICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICAvLyBib3VuZGFyeUdhcDogZmFsc2UsIC8vIOWdkOagh+i9tOS4pOi+ueeVmeeZveetlueVpSDpu5jorqQgdHJ1ZQogICAgICAgICAgICBzaG93OiAhaGlkZXhBeGlzLAogICAgICAgICAgICBkYXRhOiB4QXhpcywKICAgICAgICAgICAgLy8g5Z2Q5qCH6L206L2057q/CiAgICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgICAgc2hvdzogIWhpZGVBeGlzTGluZSwKICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiB4QXhpc0NvbG9yCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyDlnZDmoIfovbTlnKggZ3JpZCDljLrln5/kuK3nmoTliIbpmpTnur8KICAgICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgICAgc2hvdzogc2hvd3hBeGlzU3BsaXRMaW5lLAogICAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgICAgb3BhY2l0eTogeEF4aXNMaW5lT3BhY2l0eQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgLy8g5Z2Q5qCH6L205Yi75bqmCiAgICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgICAgbGVuZ3RoOiB4QXhpc1RpY2tMZW5ndGgsCiAgICAgICAgICAgICAgYWxpZ25XaXRoTGFiZWw6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgLy8g5Z2Q5qCH6L205Yi75bqm5qCH562+CiAgICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICAgIHNob3c6ICFoaWRleEF4aXNMYWJlbCwKICAgICAgICAgICAgICBjb2xvcjogeEF4aXNMYWJlbENvbG9yLAogICAgICAgICAgICAgIGZvbnRTaXplOiB4QXhpc0xhYmVsRm9udFNpemUsCiAgICAgICAgICAgICAgLy8g5Z2Q5qCH6L205Yi75bqm5qCH562+55qE5pi+56S66Ze06ZqU77yM5Zyo57G755uu6L205Lit5pyJ5pWI44CC5Y+v5Lul6K6+572u5oiQIDAg5by65Yi25pi+56S65omA5pyJ5qCH562+44CCCiAgICAgICAgICAgICAgaW50ZXJ2YWw6IHhBeGlzTGFiZWxJbnRlcnZhbCwKICAgICAgICAgICAgICBmb3JtYXR0ZXIodmFsdWUpIHsKICAgICAgICAgICAgICAgIGxldCByZXQgPSAnJyAvLyDmi7zmjqXliqBcbui/lOWbnueahOexu+ebrumhuQogICAgICAgICAgICAgICAgLy8geEF4aXNNYXhMZW5ndGgg5q+P6aG55pi+56S65paH5a2X5Liq5pWwCiAgICAgICAgICAgICAgICBsZXQgdmFsTGVuZ3RoID0gdmFsdWUubGVuZ3RoIC8vIFjovbTnsbvnm67pobnnmoTmloflrZfkuKrmlbAKICAgICAgICAgICAgICAgIGxldCByb3dOID0gTWF0aC5jZWlsKHZhbExlbmd0aCAvIHhBeGlzTWF4TGVuZ3RoKSAvLyDnsbvnm67pobnpnIDopoHmjaLooYznmoTooYzmlbAKICAgICAgICAgICAgICAgIGlmIChyb3dOID4gMSkgewogICAgICAgICAgICAgICAgICAvLyDlpoLmnpznsbvnm67pobnnmoTmloflrZflpKfkuo44LAogICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvd047IGkrKykgewogICAgICAgICAgICAgICAgICAgIGxldCB0ZW1wID0gJycgLy8g5q+P5qyh5oiq5Y+W55qE5a2X56ym5LiyCiAgICAgICAgICAgICAgICAgICAgbGV0IHN0YXJ0ID0gaSAqIHhBeGlzTWF4TGVuZ3RoIC8vIOW8gOWni+aIquWPlueahOS9jee9rgogICAgICAgICAgICAgICAgICAgIGxldCBlbmQgPSBzdGFydCArIHhBeGlzTWF4TGVuZ3RoIC8vIOe7k+adn+aIquWPlueahOS9jee9rgogICAgICAgICAgICAgICAgICAgIC8vIOi/memHjOWKoOS4gOS4quaYr+WQpuaYr+acgOWQjuS4gOihjOeahOWIpOaWrQogICAgICAgICAgICAgICAgICAgIHRlbXAgPSB2YWx1ZS5zdWJzdHJpbmcoc3RhcnQsIGVuZCkgKyAoaSA9PT0gcm93TiAtIDEgPyAnJyA6ICdcbicpCiAgICAgICAgICAgICAgICAgICAgcmV0ICs9IHRlbXAgLy8g5ou85o6l5pyA57uI55qE5a2X56ym5LiyCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgcmV0dXJuIHJldAogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICB5QXhpczogWwogICAgICAgICAgewogICAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgICBtaW46IG1pblJhbmdlLAogICAgICAgICAgICBtYXg6IG1heFJhbmdlLAogICAgICAgICAgICBzcGxpdE51bWJlcjogeUF4aXNTcGxpdE51bWJlciwKICAgICAgICAgICAgc2hvdzogIWhpZGV5QXhpcywKICAgICAgICAgICAgLy8g5Z2Q5qCH6L206L2057q/CiAgICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgICAgc2hvdzogIWhpZGVBeGlzTGluZSwKICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiB5QXhpc0NvbG9yCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyDlnZDmoIfovbTlnKggZ3JpZCDljLrln5/kuK3nmoTliIbpmpTnur8KICAgICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgICAgc2hvdzogIWhpZGV5QXhpc1NwbGl0TGluZSwKICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiB5QXhpc1NwbGl0TGluZUNvbG9yLAogICAgICAgICAgICAgICAgb3BhY2l0eTogeUF4aXNTcGxpdExpbmVPcGFjaXR5CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyDlnZDmoIfovbTliLvluqYKICAgICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgICBsZW5ndGg6IHlBeGlzVGlja0xlbmd0aCwKICAgICAgICAgICAgICBhbGlnbldpdGhMYWJlbDogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICAgIC8vIOWkmuS+iwogICAgICBpZiAobGVnZW5kICYmIGxlZ2VuZC5sZW5ndGggPiAxKSB7CiAgICAgICAgdGhpcy5wb2xhci5zZXJpZXMgPSBbXQogICAgICAgIGxlZ2VuZC5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7CiAgICAgICAgICB0aGlzLnBvbGFyLnNlcmllcy5wdXNoKHsKICAgICAgICAgICAgbmFtZTogaXRlbSwKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBpZDogaWQgJiYgaWRbaW5kZXhdLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIHdpZHRoOiAzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBzeW1ib2xTaXplOiAxMCwKICAgICAgICAgICAgZGF0YTogeUF4aXNbaW5kZXhdCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICAgICAgLy8g5Y2V5L6LCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5wb2xhci5zZXJpZXMgPSBbCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6IHRleHQsCiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgc21vb3RoLAogICAgICAgICAgICBkYXRhOiB5QXhpcywKICAgICAgICAgICAgLy8g5paH5a2X5Zyo5ZyG5ZyI5Lit5pi+56S6CiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0aGlzLiR1dGlscy5jaGVja1BhcmFtKHNob3dMYWJlbCwgaXNab29tKSwKICAgICAgICAgICAgICAgIGZvbnRTaXplOiBsYWJlbEZvbnRTaXplLAogICAgICAgICAgICAgICAgZm9udFdlaWdodDogbGFiZWxGb250V2VpZ2h0LAogICAgICAgICAgICAgICAgZm9ybWF0dGVyOiBsYWJlbEZvcm1hdCwKICAgICAgICAgICAgICAgIG9mZnNldDogbGFiZWxPZmZzZXQKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHN5bWJvbFNpemU6IHRoaXMuJHV0aWxzLmNoZWNrUGFyYW0oc3ltYm9sU2l6ZSwgaXNab29tID8gMzAgOiA1KSwKICAgICAgICAgICAgLy8g5rCU55CD5pi+56S6CiAgICAgICAgICAgIG1hcmtQb2ludDogewogICAgICAgICAgICAgIGRhdGE6IG1hcmtEYXRhCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8vIOiuvue9ruWMuuWfn+minOiJsua4kOWPmAogICAgICAgICAgICBhcmVhU3R5bGU6IHsKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIG9wYWNpdHk6IGFyZWFPcGFjaXR5LAogICAgICAgICAgICAgICAgY29sb3I6IHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICAgICAgICAgIHg6IDAsCiAgICAgICAgICAgICAgICAgIHk6IDAsCiAgICAgICAgICAgICAgICAgIHgyOiAwLAogICAgICAgICAgICAgICAgICB5MjogMSwKICAgICAgICAgICAgICAgICAgY29sb3JTdG9wczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAoY29sb3IgJiYgY29sb3JbMF0pIHx8IHRoaXMuYmFzZUNvbG9yWzBdIC8vIDAlIOWkhOeahOminOiJsgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgICAgICAgICAgY29sb3I6IChjb2xvciAmJiBjb2xvclsxXSkgfHwgdGhpcy5iYXNlQ29sb3JbMV0gLy8gMTAwJSDlpITnmoTpopzoibIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgIGdsb2JhbENvb3JkOiB0cnVlIC8vIOe8uuecgeS4uiBmYWxzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfQogICAgICAvLyDlvIDlkK/nvKnmlL4KICAgICAgaWYgKGlzWm9vbSkgewogICAgICAgIHRoaXMucG9sYXIuZGF0YVpvb20gPSBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHR5cGU6ICdpbnNpZGUnLAogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICB4QXhpc0luZGV4OiBbMF0sCiAgICAgICAgICAgIHN0YXJ0OiAxLAogICAgICAgICAgICBlbmQ6IDM1CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICB9LAogICAgaGFuZGxlTGluZUNsaWNrKGV2ZW50KSB7CiAgICAgIHRoaXMuJGVtaXQoJ2l0ZW0tY2xpY2snLCBldmVudCwgdGhpcy5vcHRpb25zLnhBeGlzKQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMucmVuZGVyQ2hhcnQoKQogIH0KfQo="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"LineChart.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div class=\"echarts-container\">\n    <chart\n      ref=\"line\"\n      :options=\"polar\"\n      auto-resize\n      v-if=\"options.xAxis && options.xAxis.length\"\n      @click=\"handleLineClick\"\n    ></chart>\n    <no-data :title=\"title\" v-else></no-data>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'LineChart',\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {\n      polar: {},\n      title: '',\n      textColor: '#333',\n      baseColor: [\n        '#2e8a00',\n        '#007fff',\n        '#fe90bf',\n        '#11feef',\n        '#ff3890',\n        '#ff644b',\n        '#29c342',\n        '#ff9600',\n        '#a34be0',\n        '#11b0ff'\n      ]\n    }\n  },\n  watch: {\n    options: {\n      handler: 'renderChart',\n      deep: true\n    }\n  },\n  methods: {\n    renderChart() {\n      const { xAxis, yAxis } = this.options\n      if (!xAxis || !yAxis || !xAxis.length || !yAxis.length) {\n        return\n      }\n      const {\n        text = '',\n        isZoom = xAxis && xAxis.length > 10,\n        hideMark,\n        color = this.baseColor,\n        textColor = this.textColor,\n        textFontSize = 18,\n        subtext,\n        subtextColor = this.textColor,\n        subtextFontSize = 12,\n        titleLeft = 'center',\n        showLegend,\n        legend,\n        hideTooltip,\n        legendTop = 35,\n        legendColor = this.textColor,\n        tooltipType = 'line',\n        tooltipFormatter = null,\n        hideToolBox,\n        hideImage,\n        toolboxName = text,\n        toolboxRight = 25,\n        toolboxTop = 20,\n        gridLeft = '3%',\n        gridRight = '3%',\n        gridBottom = '3%',\n        gridTop = '15%',\n        hidexAxis,\n        hideAxisLine,\n        xAxisColor = this.textColor,\n        showxAxisSplitLine,\n        xAxisLineOpacity = 1,\n        xAxisTickLength = 5,\n        hidexAxisLabel,\n        xAxisLabelColor = this.textColor,\n        xAxisLabelFontSize = 12,\n        xAxisLabelInterval = 0,\n        xAxisMaxLength = 8,\n        minRange = null,\n        maxRange = null,\n        yAxisSplitNumber = 5,\n        hideyAxis,\n        yAxisColor = this.textColor,\n        hideyAxisSplitLine,\n        yAxisSplitLineColor = this.textColor,\n        yAxisSplitLineOpacity = 1,\n        yAxisTickLength = 5,\n        id,\n        showLabel,\n        smooth = false,\n        labelFontSize = 12,\n        labelFontWeight = 'normal',\n        labelFormat = '{c}',\n        labelOffset = [0, 25],\n        symbolSize,\n        areaOpacity = 0\n      } = this.options\n      this.title = text || toolboxName || ''\n      let markData = []\n      // 当开启缩放后，不能使用气球样式\n      if (!isZoom && !hideMark) {\n        if (yAxis && Array.isArray(yAxis)) {\n          markData = yAxis.map((item, index) => ({\n            coord: [index, item],\n            value: item\n          }))\n        }\n      }\n      this.polar = {\n        color,\n        // 标题\n        title: {\n          text,\n          textStyle: {\n            color: textColor,\n            fontSize: textFontSize\n          },\n          subtext: subtext || (isZoom ? '当前数据较多，请滚动鼠标或缩放屏幕查看完整数据' : ''),\n          subtextStyle: {\n            color: subtextColor,\n            fontSize: subtextFontSize\n          },\n          left: titleLeft\n        },\n        // 图例\n        legend: {\n          type: 'scroll', // 只有容器放不下图例, scroll 才会生效\n          show: this.$utils.checkParam(showLegend, legend && legend.length > 1),\n          data: legend || [text],\n          right: !hideTooltip ? 50 : 20,\n          top: legendTop,\n          itemWidth: 40,\n          itemHeight: 20,\n          textStyle: {\n            color: legendColor\n          }\n        },\n        // 提示框\n        tooltip: {\n          show: !hideTooltip,\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: tooltipType // 默认为直线，可选为：'line' | 'shadow'\n          },\n          formatter: tooltipFormatter\n        },\n        // 工具栏\n        toolbox: {\n          show: !hideToolBox,\n          feature: {\n            saveAsImage: {\n              show: !hideImage,\n              name: toolboxName,\n              backgroundColor: 'rgba(0, 35, 55, 1)'\n            }\n          },\n          right: toolboxRight,\n          top: toolboxTop,\n          iconStyle: {\n            normal: {\n              borderColor: this.textColor\n            }\n          }\n        },\n        // 直角坐标系内绘图网格\n        grid: {\n          left: gridLeft,\n          right: gridRight,\n          bottom: gridBottom,\n          top: gridTop,\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: 'category',\n            // boundaryGap: false, // 坐标轴两边留白策略 默认 true\n            show: !hidexAxis,\n            data: xAxis,\n            // 坐标轴轴线\n            axisLine: {\n              show: !hideAxisLine,\n              lineStyle: {\n                color: xAxisColor\n              }\n            },\n            // 坐标轴在 grid 区域中的分隔线\n            splitLine: {\n              show: showxAxisSplitLine,\n              lineStyle: {\n                opacity: xAxisLineOpacity\n              }\n            },\n            // 坐标轴刻度\n            axisTick: {\n              length: xAxisTickLength,\n              alignWithLabel: true\n            },\n            // 坐标轴刻度标签\n            axisLabel: {\n              show: !hidexAxisLabel,\n              color: xAxisLabelColor,\n              fontSize: xAxisLabelFontSize,\n              // 坐标轴刻度标签的显示间隔，在类目轴中有效。可以设置成 0 强制显示所有标签。\n              interval: xAxisLabelInterval,\n              formatter(value) {\n                let ret = '' // 拼接加\\n返回的类目项\n                // xAxisMaxLength 每项显示文字个数\n                let valLength = value.length // X轴类目项的文字个数\n                let rowN = Math.ceil(valLength / xAxisMaxLength) // 类目项需要换行的行数\n                if (rowN > 1) {\n                  // 如果类目项的文字大于8,\n                  for (let i = 0; i < rowN; i++) {\n                    let temp = '' // 每次截取的字符串\n                    let start = i * xAxisMaxLength // 开始截取的位置\n                    let end = start + xAxisMaxLength // 结束截取的位置\n                    // 这里加一个是否是最后一行的判断\n                    temp = value.substring(start, end) + (i === rowN - 1 ? '' : '\\n')\n                    ret += temp // 拼接最终的字符串\n                  }\n                  return ret\n                } else {\n                  return value\n                }\n              }\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            min: minRange,\n            max: maxRange,\n            splitNumber: yAxisSplitNumber,\n            show: !hideyAxis,\n            // 坐标轴轴线\n            axisLine: {\n              show: !hideAxisLine,\n              lineStyle: {\n                color: yAxisColor\n              }\n            },\n            // 坐标轴在 grid 区域中的分隔线\n            splitLine: {\n              show: !hideyAxisSplitLine,\n              lineStyle: {\n                color: yAxisSplitLineColor,\n                opacity: yAxisSplitLineOpacity\n              }\n            },\n            // 坐标轴刻度\n            axisTick: {\n              length: yAxisTickLength,\n              alignWithLabel: true\n            }\n          }\n        ]\n      }\n      // 多例\n      if (legend && legend.length > 1) {\n        this.polar.series = []\n        legend.map((item, index) => {\n          this.polar.series.push({\n            name: item,\n            type: 'line',\n            id: id && id[index],\n            lineStyle: {\n              normal: {\n                width: 3\n              }\n            },\n            symbolSize: 10,\n            data: yAxis[index]\n          })\n        })\n        // 单例\n      } else {\n        this.polar.series = [\n          {\n            name: text,\n            type: 'line',\n            smooth,\n            data: yAxis,\n            // 文字在圆圈中显示\n            label: {\n              normal: {\n                show: this.$utils.checkParam(showLabel, isZoom),\n                fontSize: labelFontSize,\n                fontWeight: labelFontWeight,\n                formatter: labelFormat,\n                offset: labelOffset\n              }\n            },\n            symbolSize: this.$utils.checkParam(symbolSize, isZoom ? 30 : 5),\n            // 气球显示\n            markPoint: {\n              data: markData\n            },\n            // 设置区域颜色渐变\n            areaStyle: {\n              normal: {\n                opacity: areaOpacity,\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    {\n                      offset: 0,\n                      color: (color && color[0]) || this.baseColor[0] // 0% 处的颜色\n                    },\n                    {\n                      offset: 1,\n                      color: (color && color[1]) || this.baseColor[1] // 100% 处的颜色\n                    }\n                  ],\n                  globalCoord: true // 缺省为 false\n                }\n              }\n            }\n          }\n        ]\n      }\n      // 开启缩放\n      if (isZoom) {\n        this.polar.dataZoom = [\n          {\n            type: 'inside',\n            show: true,\n            xAxisIndex: [0],\n            start: 1,\n            end: 35\n          }\n        ]\n      }\n    },\n    handleLineClick(event) {\n      this.$emit('item-click', event, this.options.xAxis)\n    }\n  },\n  mounted() {\n    this.renderChart()\n  }\n}\n</script>\n"]}]}