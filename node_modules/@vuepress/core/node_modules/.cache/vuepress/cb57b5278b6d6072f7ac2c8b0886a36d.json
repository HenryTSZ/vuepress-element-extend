{"remainingRequest":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/BarLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/docs/.vuepress/components/BarLineChart.vue","mtime":1598335773050},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liheng/Documents/workspace/vuepress-element-extend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQmFyTGluZUNoYXJ0JywKICBwcm9wczogewogICAgb3B0aW9uczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb2xhcjoge30sCiAgICAgIHRpdGxlOiAnJywKICAgICAgdGV4dENvbG9yOiAnIzMzMycsCiAgICAgIGJhc2VDb2xvcjogWwogICAgICAgICcjNDVhMWY4JywKICAgICAgICAnI2U3YWEyNycsCiAgICAgICAgJyM3OWNkMzYnLAogICAgICAgICcjMGZiM2YyJywKICAgICAgICAnI2JkMjBkNCcsCiAgICAgICAgJyMyMDczZDknLAogICAgICAgICcjNzNhMzczJywKICAgICAgICAnIzczYjliYycsCiAgICAgICAgJyM3Mjg5YWInLAogICAgICAgICcjOTFjYThjJywKICAgICAgICAnI2Y0OWY0MicKICAgICAgXQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIG9wdGlvbnM6IHsKICAgICAgaGFuZGxlcjogJ3JlbmRlckNoYXJ0JywKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVuZGVyQ2hhcnQoKSB7CiAgICAgIGxldCB0aGF0ID0gdGhpcwogICAgICB0aGlzLnRpdGxlID0gdGhpcy5vcHRpb25zLnRleHQgfHwgdGhpcy5vcHRpb25zLnRvb2xib3hOYW1lIHx8ICcnCiAgICAgIGxldCBpc1pvb20gPSB0aGlzLm9wdGlvbnMueEF4aXMgJiYgdGhpcy5vcHRpb25zLnhBeGlzLmxlbmd0aCA+IDEwCiAgICAgIHRoaXMucG9sYXIgPSB7CiAgICAgICAgY29sb3I6IHRoaXMub3B0aW9ucy5jb2xvciB8fCB0aGlzLmJhc2VDb2xvciwKICAgICAgICAvLyDmoIfpopgKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogdGhpcy5vcHRpb25zLnRleHQgfHwgJycsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6IHRoaXMudGV4dENvbG9yCiAgICAgICAgICB9LAogICAgICAgICAgc3VidGV4dDoKICAgICAgICAgICAgdGhpcy5vcHRpb25zLnN1YnRleHQgfHwKICAgICAgICAgICAgKGlzWm9vbSA/ICflvZPliY3mlbDmja7ovoPlpJrvvIzor7fmu5rliqjpvKDmoIfmiJbnvKnmlL7lsY/luZXmn6XnnIvlrozmlbTmlbDmja4nIDogJycpLAogICAgICAgICAgc3VidGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiB0aGlzLm9wdGlvbnMuc3VidGV4dENvbG9yIHx8ICcjZjQ5ODAwJywKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMub3B0aW9ucy5zdWJ0ZXh0Rm9udFNpemUgfHwgMTIKICAgICAgICAgIH0sCiAgICAgICAgICBsZWZ0OiB0aGlzLm9wdGlvbnMudGl0bGVMZWZ0IHx8ICdjZW50ZXInCiAgICAgICAgfSwKICAgICAgICAvLyDlm77kvosKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIHR5cGU6ICdzY3JvbGwnLCAvLyDlj6rmnInlrrnlmajmlL7kuI3kuIvlm77kvossIHNjcm9sbCDmiY3kvJrnlJ/mlYgKICAgICAgICAgIHNob3c6IHRoaXMub3B0aW9ucy5zaG93TGVnZW5kIHx8ICh0aGlzLm9wdGlvbnMubGVnZW5kICYmIHRoaXMub3B0aW9ucy5sZWdlbmQubGVuZ3RoID4gMSksCiAgICAgICAgICBkYXRhOiB0aGlzLm9wdGlvbnMubGVnZW5kIHx8IFt0aGlzLm9wdGlvbnMudGV4dF0sCiAgICAgICAgICByaWdodDogIXRoaXMub3B0aW9ucy5oaWRlVG9vbHRpcCA/IDYwIDogMjAsCiAgICAgICAgICB0b3A6IHRoaXMub3B0aW9ucy5sZWdlbmRUb3AgfHwgMjUsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9ucy5sZWdlbmRDb2xvciB8fCB0aGlzLnRleHRDb2xvcgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgLy8g5o+Q56S65qGGCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgc2hvdzogIXRoaXMub3B0aW9ucy5oaWRlVG9vbHRpcCwKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIC8vIOWdkOagh+i9tOaMh+ekuuWZqO+8jOWdkOagh+i9tOinpuWPkeacieaViAogICAgICAgICAgICB0eXBlOiB0aGlzLm9wdGlvbnMudG9vbHRpcFR5cGUgfHwgJ3NoYWRvdycgLy8g6buY6K6k5Li655u057q/77yM5Y+v6YCJ5Li677yaJ2xpbmUnIHwgJ3NoYWRvdycKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8vIOW3peWFt+agjwogICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgIHNob3c6ICF0aGlzLm9wdGlvbnMuaGlkZVRvb2xCb3gsCiAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7CiAgICAgICAgICAgICAgc2hvdzogIXRoaXMub3B0aW9ucy5oaWRlSW1hZ2UsCiAgICAgICAgICAgICAgbmFtZTogdGhpcy5vcHRpb25zLnRvb2xib3hOYW1lIHx8IHRoaXMub3B0aW9ucy50ZXh0LAogICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwgMzUsIDU1LCAwLjQpJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgcmlnaHQ6IHRoaXMub3B0aW9ucy50b29sYm94UmlnaHQgfHwgMjUsCiAgICAgICAgICB0b3A6IHRoaXMub3B0aW9ucy50b29sYm94VG9wIHx8IDI1LAogICAgICAgICAgaWNvblN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGJvcmRlckNvbG9yOiB0aGlzLnRleHRDb2xvcgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAvLyDnm7Top5LlnZDmoIfns7vlhoXnu5jlm77nvZHmoLwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAnMyUnLAogICAgICAgICAgcmlnaHQ6ICc0JScsCiAgICAgICAgICBib3R0b206ICczJScsCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUKICAgICAgICB9LAogICAgICAgIHhBeGlzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICAgIHNob3c6ICF0aGlzLm9wdGlvbnMuaGlkZXhBeGlzLAogICAgICAgICAgICBkYXRhOiB0aGlzLm9wdGlvbnMueEF4aXMsCiAgICAgICAgICAgIC8vIOWdkOagh+i9tOi9tOe6vwogICAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgICAgY29sb3I6IHRoaXMudGV4dENvbG9yCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyDlnZDmoIfovbTliLvluqYKICAgICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgICBhbGlnbldpdGhMYWJlbDogdHJ1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyDlnZDmoIfovbTliLvluqbmoIfnrb4KICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgLy8g5Z2Q5qCH6L205Yi75bqm5qCH562+55qE5pi+56S66Ze06ZqU77yM5Zyo57G755uu6L205Lit5pyJ5pWI44CC5Y+v5Lul6K6+572u5oiQIDAg5by65Yi25pi+56S65omA5pyJ5qCH562+44CCCiAgICAgICAgICAgICAgaW50ZXJ2YWw6IDAsCiAgICAgICAgICAgICAgZm9ybWF0dGVyKHZhbHVlKSB7CiAgICAgICAgICAgICAgICBsZXQgcmV0ID0gJycgLy8g5ou85o6l5YqgXG7ov5Tlm57nmoTnsbvnm67pobkKICAgICAgICAgICAgICAgIGxldCBtYXhMZW5ndGggPSA4IC8vIOavj+mhueaYvuekuuaWh+Wtl+S4quaVsAogICAgICAgICAgICAgICAgbGV0IHZhbExlbmd0aCA9IHZhbHVlLmxlbmd0aCAvLyBY6L2057G755uu6aG555qE5paH5a2X5Liq5pWwCiAgICAgICAgICAgICAgICBsZXQgcm93TiA9IE1hdGguY2VpbCh2YWxMZW5ndGggLyBtYXhMZW5ndGgpIC8vIOexu+ebrumhuemcgOimgeaNouihjOeahOihjOaVsAogICAgICAgICAgICAgICAgaWYgKHJvd04gPiAxKSB7CiAgICAgICAgICAgICAgICAgIC8vIOWmguaenOexu+ebrumhueeahOaWh+Wtl+Wkp+S6jjgsCiAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcm93TjsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHRlbXAgPSAnJyAvLyDmr4/mrKHmiKrlj5bnmoTlrZfnrKbkuLIKICAgICAgICAgICAgICAgICAgICBsZXQgc3RhcnQgPSBpICogbWF4TGVuZ3RoIC8vIOW8gOWni+aIquWPlueahOS9jee9rgogICAgICAgICAgICAgICAgICAgIGxldCBlbmQgPSBzdGFydCArIG1heExlbmd0aCAvLyDnu5PmnZ/miKrlj5bnmoTkvY3nva4KICAgICAgICAgICAgICAgICAgICAvLyDov5nph4zkuZ/lj6/ku6XliqDkuIDkuKrmmK/lkKbmmK/mnIDlkI7kuIDooYznmoTliKTmlq3vvIzkvYbmmK/kuI3liqDkuZ/msqHmnInlvbHlk43vvIzpgqPlsLHkuI3liqDlkKcKICAgICAgICAgICAgICAgICAgICB0ZW1wID0gdmFsdWUuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpICsgJ1xuJwogICAgICAgICAgICAgICAgICAgIHJldCArPSB0ZW1wIC8vIOWHreWAn+acgOe7iOeahOWtl+espuS4sgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIHJldHVybiByZXQKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgeUF4aXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgICAgc2hvdzogIXRoaXMub3B0aW9ucy5oaWRleUF4aXMsCiAgICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogdGhpcy50ZXh0Q29sb3IKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0KICAgICAgLy8g5aSa5L6LCiAgICAgIGlmICh0aGlzLm9wdGlvbnMubGVnZW5kICYmIHRoaXMub3B0aW9ucy5sZWdlbmQubGVuZ3RoID4gMSkgewogICAgICAgIHRoaXMucG9sYXIuc2VyaWVzID0gW10KICAgICAgICB0aGlzLm9wdGlvbnMubGVnZW5kLm1hcCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICAgIGlmIChpdGVtID09PSAn5Z+65bu65qaCKOmihCnnrpfmgLvmipXotYTpop0nKSB7CiAgICAgICAgICAgIHRoaXMucG9sYXIuc2VyaWVzLnB1c2goewogICAgICAgICAgICAgIG5hbWU6IGl0ZW0sCiAgICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICAgIC8vIGJhck1heFdpZHRoOiAyNSwKICAgICAgICAgICAgICBzeW1ib2xTaXplOiAxMCwKICAgICAgICAgICAgICBkYXRhOiB0aGlzLm9wdGlvbnMueUF4aXNbaW5kZXhdCiAgICAgICAgICAgIH0pCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLnBvbGFyLnNlcmllcy5wdXNoKHsKICAgICAgICAgICAgICBuYW1lOiBpdGVtLAogICAgICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgICAgIGJhck1heFdpZHRoOiAyNSwKICAgICAgICAgICAgICBkYXRhOiB0aGlzLm9wdGlvbnMueUF4aXNbaW5kZXhdCiAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAvLyDljZXkvosKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnBvbGFyLnNlcmllcyA9IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogdGhpcy5vcHRpb25zLmxlZ2VuZCA/IHRoaXMub3B0aW9ucy5sZWdlbmRbMF0gOiB0aGlzLm9wdGlvbnMudGV4dCwKICAgICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICAgIGJhck1heFdpZHRoOiAyNSwKICAgICAgICAgICAgZGF0YTogdGhpcy5vcHRpb25zLnlBeGlzLAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICAvLyDmuJDlj5gKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiBuZXcgZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDEsIDAsIDAsIFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb25zLmNvbG9yID8gdGhpcy5vcHRpb25zLmNvbG9yWzBdIDogJyMyYWY1OTgnCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9ucy5jb2xvciA/IHRoaXMub3B0aW9ucy5jb2xvclsxXSA6ICcjMDA5ZWZkJwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIGJhckJvcmRlclJhZGl1czogNAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiBuZXcgZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDEsIDAsIDAsIFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgICAgICBjb2xvcjogdGhpcy5vcHRpb25zLmNvbG9yID8gdGhpcy5vcHRpb25zLmNvbG9yWzBdIDogJyMyYWY1OTgnCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHRoaXMub3B0aW9ucy5jb2xvciA/IHRoaXMub3B0aW9ucy5jb2xvclsxXSA6ICcjMDA5ZWZkJwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIGJhckJvcmRlclJhZGl1czogNAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfQogICAgICAvLyDlvIDlkK/lj43ovawKICAgICAgaWYgKHRoaXMub3B0aW9ucy5yZXZlcnNlKSB7CiAgICAgICAgdGhpcy5wb2xhci54QXhpcyA9IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgICAgc2hvdzogIXRoaXMub3B0aW9ucy5oaWRleUF4aXMsCiAgICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogdGhpcy50ZXh0Q29sb3IKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgICAgdGhpcy5wb2xhci55QXhpcyA9IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgICAgc2hvdzogIXRoaXMub3B0aW9ucy5oaWRleEF4aXMsCiAgICAgICAgICAgIGRhdGE6IHRoaXMub3B0aW9ucy54QXhpcywKICAgICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiB0aGlzLnRleHRDb2xvcgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgICBhbGlnbldpdGhMYWJlbDogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICAgIHRoaXMucG9sYXIuc2VyaWVzID0gWwogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiB0aGlzLm9wdGlvbnMubGVnZW5kID8gdGhpcy5vcHRpb25zLmxlZ2VuZFswXSA6IHRoaXMub3B0aW9ucy50ZXh0LAogICAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgICAgYmFyTWF4V2lkdGg6IDI1LAogICAgICAgICAgICBkYXRhOiB0aGlzLm9wdGlvbnMueUF4aXMsCiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgICAgY29sb3IocGFyYW1zKSB7CiAgICAgICAgICAgICAgICAgIGxldCBjb2xvckxpc3QgPSBbCiAgICAgICAgICAgICAgICAgICAgJyM0NUExRjgnLAogICAgICAgICAgICAgICAgICAgICcjRTdBQTI3JywKICAgICAgICAgICAgICAgICAgICAnIzc5Q0QzNicsCiAgICAgICAgICAgICAgICAgICAgJyNFODdDMjUnLAogICAgICAgICAgICAgICAgICAgICcjMjc3MjdCJywKICAgICAgICAgICAgICAgICAgICAnI0ZFODQ2MycsCiAgICAgICAgICAgICAgICAgICAgJyM5QkNBNjMnLAogICAgICAgICAgICAgICAgICAgICcjRkFEODYwJywKICAgICAgICAgICAgICAgICAgICAnI0YzQTQzQicsCiAgICAgICAgICAgICAgICAgICAgJyM2MEMwREQnLAogICAgICAgICAgICAgICAgICAgICcjRDc1MDRCJywKICAgICAgICAgICAgICAgICAgICAnI0M2RTU3OScsCiAgICAgICAgICAgICAgICAgICAgJyNGNEUwMDEnLAogICAgICAgICAgICAgICAgICAgICcjRjA4MDVBJywKICAgICAgICAgICAgICAgICAgICAnIzI2QzBDMCcKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICByZXR1cm4gdGhhdC5vcHRpb25zLmNvbG9yTGlzdAogICAgICAgICAgICAgICAgICAgID8gdGhhdC5vcHRpb25zLmNvbG9yTGlzdFtwYXJhbXMuZGF0YUluZGV4XQogICAgICAgICAgICAgICAgICAgIDogY29sb3JMaXN0W3BhcmFtcy5kYXRhSW5kZXhdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICAgIC8vIOW8gOWQr+e8qeaUvgogICAgICBpZiAoaXNab29tKSB7CiAgICAgICAgdGhpcy5wb2xhci5kYXRhWm9vbSA9IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdHlwZTogJ2luc2lkZScsCiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHhBeGlzSW5kZXg6IFswXSwKICAgICAgICAgICAgc3RhcnQ6IDEsCiAgICAgICAgICAgIGVuZDogMzUKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVCYXJDbGljayhldmVudCkgewogICAgICB0aGlzLiRlbWl0KCdpdGVtLWNsaWNrJywgZXZlbnQsIHRoaXMub3B0aW9ucykKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJlbmRlckNoYXJ0KCkKICB9Cn0K"},{"version":3,"sources":["BarLineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"BarLineChart.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div class=\"echarts-container\">\n    <chart\n      ref=\"bar-line\"\n      :options=\"polar\"\n      auto-resize\n      v-if=\"options.xAxis && options.xAxis.length\"\n      @click=\"handleBarClick\"\n    ></chart>\n    <no-data :title=\"title\" v-else></no-data>\n  </div>\n</template>\n\n<script>\nimport echarts from 'echarts'\nexport default {\n  name: 'BarLineChart',\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {\n      polar: {},\n      title: '',\n      textColor: '#333',\n      baseColor: [\n        '#45a1f8',\n        '#e7aa27',\n        '#79cd36',\n        '#0fb3f2',\n        '#bd20d4',\n        '#2073d9',\n        '#73a373',\n        '#73b9bc',\n        '#7289ab',\n        '#91ca8c',\n        '#f49f42'\n      ]\n    }\n  },\n  watch: {\n    options: {\n      handler: 'renderChart',\n      deep: true\n    }\n  },\n  methods: {\n    renderChart() {\n      let that = this\n      this.title = this.options.text || this.options.toolboxName || ''\n      let isZoom = this.options.xAxis && this.options.xAxis.length > 10\n      this.polar = {\n        color: this.options.color || this.baseColor,\n        // 标题\n        title: {\n          text: this.options.text || '',\n          textStyle: {\n            color: this.textColor\n          },\n          subtext:\n            this.options.subtext ||\n            (isZoom ? '当前数据较多，请滚动鼠标或缩放屏幕查看完整数据' : ''),\n          subtextStyle: {\n            color: this.options.subtextColor || '#f49800',\n            fontSize: this.options.subtextFontSize || 12\n          },\n          left: this.options.titleLeft || 'center'\n        },\n        // 图例\n        legend: {\n          type: 'scroll', // 只有容器放不下图例, scroll 才会生效\n          show: this.options.showLegend || (this.options.legend && this.options.legend.length > 1),\n          data: this.options.legend || [this.options.text],\n          right: !this.options.hideTooltip ? 60 : 20,\n          top: this.options.legendTop || 25,\n          textStyle: {\n            color: this.options.legendColor || this.textColor\n          }\n        },\n        // 提示框\n        tooltip: {\n          show: !this.options.hideTooltip,\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: this.options.tooltipType || 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n          }\n        },\n        // 工具栏\n        toolbox: {\n          show: !this.options.hideToolBox,\n          feature: {\n            saveAsImage: {\n              show: !this.options.hideImage,\n              name: this.options.toolboxName || this.options.text,\n              backgroundColor: 'rgba(0, 35, 55, 0.4)'\n            }\n          },\n          right: this.options.toolboxRight || 25,\n          top: this.options.toolboxTop || 25,\n          iconStyle: {\n            normal: {\n              borderColor: this.textColor\n            }\n          }\n        },\n        // 直角坐标系内绘图网格\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: 'category',\n            show: !this.options.hidexAxis,\n            data: this.options.xAxis,\n            // 坐标轴轴线\n            axisLine: {\n              lineStyle: {\n                color: this.textColor\n              }\n            },\n            // 坐标轴刻度\n            axisTick: {\n              alignWithLabel: true\n            },\n            // 坐标轴刻度标签\n            axisLabel: {\n              // 坐标轴刻度标签的显示间隔，在类目轴中有效。可以设置成 0 强制显示所有标签。\n              interval: 0,\n              formatter(value) {\n                let ret = '' // 拼接加\\n返回的类目项\n                let maxLength = 8 // 每项显示文字个数\n                let valLength = value.length // X轴类目项的文字个数\n                let rowN = Math.ceil(valLength / maxLength) // 类目项需要换行的行数\n                if (rowN > 1) {\n                  // 如果类目项的文字大于8,\n                  for (let i = 0; i < rowN; i++) {\n                    let temp = '' // 每次截取的字符串\n                    let start = i * maxLength // 开始截取的位置\n                    let end = start + maxLength // 结束截取的位置\n                    // 这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧\n                    temp = value.substring(start, end) + '\\n'\n                    ret += temp // 凭借最终的字符串\n                  }\n                  return ret\n                } else {\n                  return value\n                }\n              }\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            show: !this.options.hideyAxis,\n            axisLine: {\n              lineStyle: {\n                color: this.textColor\n              }\n            }\n          }\n        ]\n      }\n      // 多例\n      if (this.options.legend && this.options.legend.length > 1) {\n        this.polar.series = []\n        this.options.legend.map((item, index) => {\n          if (item === '基建概(预)算总投资额') {\n            this.polar.series.push({\n              name: item,\n              type: 'line',\n              // barMaxWidth: 25,\n              symbolSize: 10,\n              data: this.options.yAxis[index]\n            })\n          } else {\n            this.polar.series.push({\n              name: item,\n              type: 'bar',\n              barMaxWidth: 25,\n              data: this.options.yAxis[index]\n            })\n          }\n        })\n        // 单例\n      } else {\n        this.polar.series = [\n          {\n            name: this.options.legend ? this.options.legend[0] : this.options.text,\n            type: 'bar',\n            barMaxWidth: 25,\n            data: this.options.yAxis,\n            itemStyle: {\n              // 渐变\n              normal: {\n                color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\n                  {\n                    offset: 0,\n                    color: this.options.color ? this.options.color[0] : '#2af598'\n                  },\n                  {\n                    offset: 1,\n                    color: this.options.color ? this.options.color[1] : '#009efd'\n                  }\n                ]),\n                barBorderRadius: 4\n              },\n              emphasis: {\n                color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\n                  {\n                    offset: 0,\n                    color: this.options.color ? this.options.color[0] : '#2af598'\n                  },\n                  {\n                    offset: 1,\n                    color: this.options.color ? this.options.color[1] : '#009efd'\n                  }\n                ]),\n                barBorderRadius: 4\n              }\n            }\n          }\n        ]\n      }\n      // 开启反转\n      if (this.options.reverse) {\n        this.polar.xAxis = [\n          {\n            type: 'value',\n            show: !this.options.hideyAxis,\n            axisLine: {\n              lineStyle: {\n                color: this.textColor\n              }\n            }\n          }\n        ]\n        this.polar.yAxis = [\n          {\n            type: 'category',\n            show: !this.options.hidexAxis,\n            data: this.options.xAxis,\n            axisLine: {\n              lineStyle: {\n                color: this.textColor\n              }\n            },\n            axisTick: {\n              alignWithLabel: true\n            }\n          }\n        ]\n        this.polar.series = [\n          {\n            name: this.options.legend ? this.options.legend[0] : this.options.text,\n            type: 'bar',\n            barMaxWidth: 25,\n            data: this.options.yAxis,\n            itemStyle: {\n              normal: {\n                color(params) {\n                  let colorList = [\n                    '#45A1F8',\n                    '#E7AA27',\n                    '#79CD36',\n                    '#E87C25',\n                    '#27727B',\n                    '#FE8463',\n                    '#9BCA63',\n                    '#FAD860',\n                    '#F3A43B',\n                    '#60C0DD',\n                    '#D7504B',\n                    '#C6E579',\n                    '#F4E001',\n                    '#F0805A',\n                    '#26C0C0'\n                  ]\n                  return that.options.colorList\n                    ? that.options.colorList[params.dataIndex]\n                    : colorList[params.dataIndex]\n                }\n              }\n            }\n          }\n        ]\n      }\n      // 开启缩放\n      if (isZoom) {\n        this.polar.dataZoom = [\n          {\n            type: 'inside',\n            show: true,\n            xAxisIndex: [0],\n            start: 1,\n            end: 35\n          }\n        ]\n      }\n    },\n    handleBarClick(event) {\n      this.$emit('item-click', event, this.options)\n    }\n  },\n  mounted() {\n    this.renderChart()\n  }\n}\n</script>\n\n<style></style>\n"]}]}